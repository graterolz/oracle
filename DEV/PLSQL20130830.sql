CREATE OR REPLACE PACKAGE MIGRA.MIGRA_POLIZA_MIGCARTEI_N
AS
	PROCEDURE INGRESA_POLIZA_A_MIGRAR;
	PROCEDURE GEN_RECIBO_MIGRA;
	PROCEDURE ASIGNA_ERRORES;
	PROCEDURE COMPLETA_RECIBO;
	PROCEDURE GEN_CODCLI;
	PROCEDURE INS_TABLAS_EQ;
	PROCEDURE GEN_EQ_REPF14_NM;
	PROCEDURE INSERTAR_DAT_EQ_REASEGURO_R;
	PROCEDURE MIG_REASEGURO_EG;
	PROCEDURE CERT_VEH_APEP_MIG;
	PROCEDURE COND_VEH_APEP_MIG;
	PROCEDURE DIREC_COBROPOLIZA_MIG;
END MIGRA_POLIZA_MIGCARTEI_N;
--
CREATE OR REPLACE PACKAGE BODY MIGRA.MIGRA_POLIZA_MIGCARTEI_N
AS
	PROCEDURE INGRESA_RECIBO_A_MIGRAR (
		pRAMO 		POLIZAS_MIGRA_REN.RAMO%TYPE,
		pPOLIZA 	POLIZAS_MIGRA_REN.POLIZA%TYPE,
		pNUMREC		POLIZAS_MIGRA_REN.NUMREC%TYPE,
		pNUMCERT	POLIZAS_MIGRA_REN.NUMCER%TYPE
	)
	IS
		CURSOR EXISTE_MIGCARTEI (
			pRAMO POLIZAS_MIGRA_REN.RAMO%TYPE,
			pPOLIZA POLIZAS_MIGRA_REN.POLIZA%TYPE,
			pNUMREC POLIZAS_MIGRA_REN.NUMREC%TYPE,
			pNUMCERT POLIZAS_MIGRA_REN.NUMCER%TYPE
		)
		IS
		SELECT * FROM MIGCARTEI_REN
		WHERE RAMO = pRAMO
		AND POLIZA = pPOLIZA
		AND NUMREC = pNUMREC;
		--
		RT_EXISTE_MIGCARTEI		EXISTE_MIGCARTEI%ROWTYPE;
	BEGIN
		OPEN EXISTE_MIGCARTEI (pRAMO,pPOLIZA,pNUMREC,pNUMCERT);
		FETCH EXISTE_MIGCARTEI INTO RT_EXISTE_MIGCARTEI;

		IF EXISTE_MIGCARTEI%FOUND THEN
			INSERT INTO POLIZAS_MIGRA_REN (RAMO,POLIZA,NUMREC,NUMCER)
			VALUES (pRAMO,pPOLIZA,pNUMREC,pNUMCERT);
			COMMIT;
		END IF;
		CLOSE EXISTE_MIGCARTEI;
	END INGRESA_RECIBO_A_MIGRAR;
	--
	PROCEDURE INGRESA_POLIZA_A_MIGRAR (
		pRAMO  POLIZAS_MIGRA_REN.RAMO%TYPE,
		pPOLIZA POLIZAS_MIGRA_REN.POLIZA%TYPE
	)
	IS
		CURSOR CUR_RECIBOS_MIGCARTEI (
			pRAMO  POLIZAS_MIGRA_REN.RAMO%TYPE,
			pPOLIZA POLIZAS_MIGRA_REN.POLIZA%TYPE
		)
		IS
		SELECT RAMO,POLIZA,NUMREC
		FROM MIGCARTEI
		WHERE RAMO = pRAMO
		AND POLIZA = pPOLIZA;
	BEGIN
		FOR I IN CUR_RECIBOS_MIGCARTEI (PRAMO,PPOLIZA)
		LOOP
			INSERT INTO POLIZAS_MIGRA_REN (RAMO,POLIZA,NUMREC)
			VALUES (I.RAMO,I.POLIZA,I.NUMREC);
			COMMIT;
		END LOOP;
	END INGRESA_POLIZA_A_MIGRAR;
	--
	PROCEDURE GEN_RECIBO_MIGRA
	IS
		CURSOR CUR_GENERA
		IS
		SELECT DISTINCT
			A.RAMO,A.POLIZA,A.NUMREC,B.CODCOB,1 NUMCERT,DECODE (NVL (B.SUMASE,1),0,1,NVL (B.SUMASE,1)) SUMAASEGMONEDA,
			DECODE (NVL (B.PRIMAR,1),0,1,NVL (B.PRIMAR,1)) PRIMAMONEDA,'I' TIPOSUSC,'S' MIGRA,'N/A' RAZONMIGRA,B.BIECOB
		FROM POLIZAS_MIGRA_REN A,HJPF05_NM B
		WHERE A.RAMO = B.RAMO
		AND A.POLIZA = B.POLIZA
		AND A.NUMREC = B.NUMREC
		AND PM.TB_REF_TIPO_SUSCRIPCION (A.RAMO) = 'I'
		UNION ALL
		SELECT DISTINCT
			A.RAMO,A.POLIZA,A.NUMREC,C.CODCOB,TO_NUMBER (C.CERVEH) NUMCERT,
			DECODE (NVL (C.SUMASE,1),0,1,NVL (C.SUMASE,1)) SUMAASEGMONEDA,
			DECODE (NVL (C.PRIMA,1),0,1,NVL (C.PRIMA,1)) PRIMAMONEDA,'C' TIPOSUSC,
			'S' MIGRA,'N/A' RAZONMIGRA,B.BIECOB
		FROM POLIZAS_MIGRA_REN A,HJPF05_NM B,CLPF08N_REN C
		WHERE A.RAMO = B.RAMO
		AND A.POLIZA = B.POLIZA
		AND A.NUMREC = B.NUMREC
		AND A.RAMO = C.RAMO
		AND A.POLIZA = C.POLIZA
		AND A.NUMREC = C.NUMREC
		AND A.NUMCER = TO_NUMBER (C.CERVEH)
		AND PM.TB_REF_TIPO_SUSCRIPCION (A.RAMO) = 'C';
		--
		V_BIECOB  EQ_POLIZA_NO_MIGRADO.BIECOB%TYPE;
		V_CLASEBIEN EQ_POLIZA_NO_MIGRADO.CLASEBIEN%TYPE;
		V_CODRAMOCERT   EQ_POLIZA_NO_MIGRADO.CODRAMOCERT%TYPE;
		V_CODCOBERT EQ_POLIZA_NO_MIGRADO.CODCOBERT%TYPE;
		V_CODBIEN EQ_POLIZA_NO_MIGRADO.CODBIEN%TYPE;
	BEGIN
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_POLIZA_NO_MIGRADO';
		--
		FOR I IN CUR_GENERA
		LOOP
			INSERT INTO EQ_POLIZA_NO_MIGRADO (
				RAMO,POLIZA,NUMREC,CODCOB,NUMCERT,SUMAASEGMONEDA,
				PRIMAMONEDA,TIPOSUSC,MIGRA,RAZONMIGRA,BIECOB
			)
			VALUES (
				I.RAMO,I.POLIZA,I.NUMREC,I.CODCOB,I.NUMCERT,I.SUMAASEGMONEDA,
				I.PRIMAMONEDA,I.TIPOSUSC,I.MIGRA,I.RAZONMIGRA,I.BIECOB
			);
			COMMIT;
		END LOOP;
		--
		FOR I IN (
			SELECT DISTINCT RAMO,POLIZA,NUMREC,BIECOB
			FROM EQ_POLIZA_NO_MIGRADO
		)
		LOOP
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET FECINIVIG = PM.CONVIERTE_DIAMESANO_FECHA (
				(SELECT DIADES FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT MESDES FROM HJPF02_NM WHERE RAMO = I.RAMOAND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT ANODES FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC)
			),
			FECFINVIG = PM.CONVIERTE_DIAMESANO_FECHA (
				(SELECT DIAHAS FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT MESHAS FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT ANOHAS FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC)
			),
			FECEMI = PM.CONVIERTE_DIAMESANO_FECHA (
				(SELECT DIAEMI FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT MESEMI FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT ANOEMI FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC)
			),
			FECINIVALID = PM.CONVIERTE_DIAMESANO_FECHA (
				(SELECT DIADES FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT MESDES FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT ANODES FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC)
			),
			FECFINVALID = PM.CONVIERTE_DIAMESANO_FECHA (
				(SELECT DIAHAS FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT MESHAS FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
				(SELECT ANOHAS FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC)
			),
			NUMREN = PM.CALCULA_NUMERO_RENOVACIONES (
				PM.CONVIERTE_DIAMESANO_FECHA (
					(SELECT DIADES FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
					(SELECT MESDES FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC),
					(SELECT ANODES FROM HJPF02_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA AND NUMREC = I.NUMREC)
				),
				(
					SELECT PM.CONVIERTE_DIAMESANO_FECHA (DIACOM,MESCOM,ANOCOM) FROM HJPF01_NM
					WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA
				)
			),
			CLASEBIEN = (
				SELECT CLASEBIEN FROM EQ_CLASEBIEN WHERE RAMO = I.RAMO AND BIECOB = I.BIECOB
			)
			WHERE RAMO = I.RAMO
			AND POLIZA = I.POLIZA
			AND NUMREC = I.NUMREC;
			COMMIT;
		END LOOP;
		--
		FOR I IN (SELECT DISTINCT RAMO,POLIZA,NUMCERT FROM EQ_POLIZA_NO_MIGRADO)
		LOOP
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET FECING = (
				SELECT PM.CONVIERTE_DIAMESANO_FECHA (DIAING,MESING,ANOING)
				FROM CLPF05_REN
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND NUMCER = LPAD (I.NUMCERT,10,0)
				UNION ALL
				SELECT PM.CONVIERTE_DIAMESANO_FECHA (DIAING,MESING,ANOING)
				FROM CLPF07_REN
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND CERVEH = I.NUMCERT
			)
			WHERE RAMO = I.RAMO
			AND POLIZA = I.POLIZA
			AND NUMCERT = I.NUMCERT;
			COMMIT;
		END LOOP;
		--
		FOR I IN (SELECT DISTINCT RAMO,POLIZA,CODCOB,BIECOB FROM EQ_POLIZA_NO_MIGRADO)
		LOOP
			BEGIN
				SELECT CODRAMO,CODCOBERT,CODBIEN INTO V_CODRAMOCERT,V_CODCOBERT,V_CLASEBIEN
				FROM ACSEL.BIENES_MIG@CERT
				WHERE RAMO = I.RAMO
				AND TO_NUMBER (BIEN) = TO_NUMBER (I.BIECOB)
				AND CODCOB = I.CODCOB;
			EXCEPTION WHEN NO_DATA_FOUND THEN
				BEGIN
					SELECT CODRAMO,CODCOBERT INTO V_CODRAMOCERT,V_CODCOBERT
					FROM ACSEL.RAMOS_MIG@CERT
					WHERE RAMO = I.RAMO
					AND CODCOB = I.CODCOB;
				EXCEPTION WHEN NO_DATA_FOUND THEN
					V_CODRAMOCERT := NULL;
					V_CODCOBERT := NULL;
					V_CLASEBIEN := NULL;
				END;
			END;
			--
			IF V_CLASEBIEN IS NULL THEN
				V_CLASEBIEN := '000';
			END IF;
			--
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET CODRAMOCERT = V_CODRAMOCERT,
				CODCOBERT = V_CODCOBERT,
				CLASEBIEN = V_CLASEBIEN
			WHERE RAMO = I.RAMO
			AND POLIZA = I.POLIZA
			AND CODCOB = I.CODCOB
			AND BIECOB = I.BIECOB;
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET FECING = FECEMI
		WHERE FECING IS NULL
		AND TIPOSUSC = 'I';
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET CODBIEN = '000'
		WHERE CODBIEN IS NULL;
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET CLASEBIEN = '000'
		WHERE CLASEBIEN IS NULL;
		COMMIT;
		--
	END GEN_RECIBO_MIGRA;
	--
	PROCEDURE ASIGNA_ERRORES
	IS
	BEGIN
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRA = 'N',
			RAZONMIGRA = 'No tiene NUMREN'
		WHERE NUMREN IS NULL;
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRA = 'N',
			RAZONMIGRA = 'No tiene NUMCERT'
		WHERE MIGRA = 'S' AND NUMCERT IS NULL;
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRA = 'N',
			RAZONMIGRA = 'No tiene FECING'
		WHERE MIGRA = 'S'
		AND FECING IS NULL
		AND TIPOSUSC = 'C';
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRA = 'N',
			RAZONMIGRA = 'No tiene FECEMI'
		WHERE MIGRA = 'S'
		AND FECEMI IS NULL;
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRA = 'N',
			RAZONMIGRA = 'No tiene CODRAMOCERT'
		WHERE MIGRA = 'S'
		AND CODRAMOCERT IS NULL;
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRA = 'N',
			RAZONMIGRA = 'No tiene CODCOBERT'
		WHERE MIGRA = 'S'
		AND CODCOBERT IS NULL;
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRA = 'N',
			RAZONMIGRA = 'No tiene CODBIEN'
		WHERE MIGRA = 'S'
		AND CODBIEN = '000'
		AND RAMO IN (
			SELECT TO_NUMBER (ACARGU) FROM CTRALTAB
			WHERE ACTIAR = 4852 AND TRIM (ACARGU) <> '**'
		);
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRA = 'N',
			RAZONMIGRA = 'No tiene CLASEBIEN'
		WHERE MIGRA = 'S'
		AND CLASEBIEN = '000'
		AND RAMO IN (
			SELECT TO_NUMBER (ACARGU) FROM CTRALTAB
			WHERE ACTIAR = 4852
			AND TRIM (ACARGU) <> '**'
		);
		COMMIT;
		--
	END ASIGNA_ERRORES;
	--
	PROCEDURE COMPLETA_RECIBO
	IS
		V_CODPROD	EQ_POLIZA_NO_MIGRADO.CODPROD%TYPE;
		V_CODPLAN	EQ_POLIZA_NO_MIGRADO.CODPLAN%TYPE;
		V_REVPLAN	EQ_POLIZA_NO_MIGRADO.REVPLAN%TYPE;
		V_TIPOMOV	EQ_POLIZA_NO_MIGRADO.TIPOMOV%TYPE;
		V_STSREC	EQ_POLIZA_NO_MIGRADO.STSREC%TYPE;
	BEGIN
		FOR I IN (
			SELECT DISTINCT RAMO,POLIZA FROM EQ_POLIZA_NO_MIGRADO
			WHERE MIGRA = 'S'
		)
		LOOP
			V_CODPROD := NULL;
			V_CODPLAN := NULL;
			V_REVPLAN := NULL;
			--
			PM.ASIGNA_PRODUCTO_PLAN (
				NRAMO => I.RAMO,
				NPOLIZA => I.POLIZA,
				NNUMCER => NULL,
				CCODPROD => V_CODPROD,
				CCODPLAN => V_CODPLAN,
				CREVPLAN => V_REVPLAN
			);
			--
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET CODPLAN = '999',
				REVPLAN = '999',
				STSPOL = 'REN',
				CLASERIESGO = '01',
				STSCOBERT = 'ACT',
				CODPARENT = '0001',
				DESCCERT = 'ACTIVO',
				STSBIEN = 'ACT',
				STSCERT = 'REN',
				CODPROD = V_CODPROD,
				TIPOVIG = PM.TB_REF_TIPOVIG (
					(SELECT FORPAG FROM HJPF01_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA)
				),
				TIPOPDCION = PM.TB_REF_TIPOPDCION (
					(SELECT TIPPRO FROM HJPF01_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA)
				),
				TIPOFACT = DECODE (PM_AL.TB_REF_TIPOVIG (
					(SELECT FORPAG FROM HJPF01_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA)),'C','C','P'
				),
				INDCOA = DECODE (
					(SELECT CODCOA FROM HJPF01_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA),0,'N','S'
				),
				CODFORMFCION = DECODE (
					PM.TB_REF_TIPO_SUSCRIPCION (RAMO),'C','C','P'
				),
				CODOFISUSC = PM.CONVIERTE_ZONCOB_CODOFI (
					(SELECT ZONCOB FROM HJPF01_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA)
				),
				CODINTER = PM.BUSCA_PRODUCTOR (
					(SELECT CODPRD FROM HJPF01_NM WHERE RAMO = I.RAMO AND POLIZA = I.POLIZA)
				),
				CODMONEDA = (
					SELECT DECODE (TRIM (MAX (TIPMON)),'DO','DL','BS')
					FROM HJPF02_NM
					WHERE RAMO = I.RAMO AND POLIZA = I.RAMO
				),
				CODOFIEMI = (
					SELECT PM.BUSCA_DEPARTAMENTO (ZONCOB)
					FROM HJPF01_NM
					WHERE RAMO = I.RAMO
					AND POLIZA = I.POLIZA
				),
				CODFORMPAGO = (
					SELECT SUBSTR (ACFUNC,1,1)
					FROM CTRALTAB
					WHERE ACTIAR = 272
					AND TO_NUMBER (ACARGU) = (
						SELECT FORPAG FROM HJPF01_NM
						WHERE RAMO = I.RAMO
						AND POLIZA = I.POLIZA
					)
				),
				INDASEGTITULAR = DECODE (CODBE,0,'S',99,'S','N'),
				CODGRP = (
					SELECT PM.TB_REF_GRUPO_EMPRESARIAL (CDTCBR)
					FROM HJPF01_NM
					WHERE RAMO = I.RAMO
					AND POLIZA = I.POLIZA
				),
				PORCCOM = 0,
				MTOCOMISION = 0
			WHERE MIGRA = 'S'
			AND RAMO = I.RAMO
			AND POLIZA = I.POLIZA;
			COMMIT;
		END LOOP;
		--
		FOR I IN (
			SELECT DISTINCT RAMO,POLIZA,NUMREC FROM EQ_POLIZA_NO_MIGRADO
			WHERE MIGRA = 'S'
		)
		LOOP
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET STSSIT = (
				SELECT NVL (TRIM (STSSIT),'0') FROM HJPF02_NM
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND NUMREC = I.NUMREC
			),
			SUMAASEG = (
				SELECT TOTSAS
				FROM HJPF02_NM
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND NUMREC = I.NUMREC
			),
			MONTOPRIMA = (
				SELECT TOTPRI
				FROM HJPF02_NM
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND NUMREC = I.NUMREC
			),
			TASACAMBIO = (
				SELECT DECODE (TIPCAM,0,1,TIPCAM)
				FROM HJPF02_NM
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND NUMREC = I.NUMREC
			)
			WHERE MIGRA = 'S'
			AND RAMO = I.RAMO
			AND POLIZA = I.POLIZA
			AND NUMREC = I.NUMREC;
		END LOOP;
		--
		FOR I IN (
			SELECT DISTINCT RAMO,POLIZA,NUMREC,CODCOB,CODBE
			FROM EQ_POLIZA_NO_MIGRADO
			WHERE MIGRA = 'S'
		)
		LOOP
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET PRIMAMONEDA = (
				SELECT NVL (PRIMAR,0) FROM HJPF05_NM
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND NUMREC = I.NUMREC
				AND CODCOB = I.CODCOB
				AND BIECOB = I.CODBE
			),
			SUMAASEGMONEDA = (
				SELECT NVL (SUMASE,0) FROM HJPF05_NM
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND NUMREC = I.NUMREC
				AND CODCOB = I.CODCOB
				AND BIECOB = I.CODBE
			)
			WHERE MIGRA = 'S'
			AND RAMO = I.RAMO
			AND POLIZA = I.POLIZA
			AND NUMREC = I.NUMREC
			AND CODCOB = I.CODCOB
			AND CODBE = I.CODBE;
			COMMIT;
		END LOOP;
		--
		FOR I IN (
			SELECT DISTINCT RAMO,POLIZA,NUMREC,STSSIT,PRIMAMONEDA
			FROM EQ_POLIZA_NO_MIGRADO
			WHERE MIGRA = 'S'
		)
		LOOP
			BEGIN
				SELECT (
					CASE
						WHEN CODOPE IN ('05','25','01') THEN 'EMI'
						WHEN CODOPE IN ('04','90') THEN 'REN'
						WHEN CODOPE IN ('97','33') THEN 'DEV'
						ELSE 'MOD'
					END) INTO V_TIPOMOV
				FROM HJPF02_NM
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND NUMREC = I.NUMREC;
			EXCEPTION
			WHEN NO_DATA_FOUND THEN
				UPDATE EQ_POLIZA_NO_MIGRADO
				SET MIGRA = 'N',
					RAZONMIGRA = 'No existe en HJPF02_REN'
				WHERE RAMO = I.RAMO
				AND POLIZA = I.POLIZA
				AND NUMREC = I.NUMREC;
				COMMIT;
			END;
			--
			IF NVL (TRIM (I.STSSIT),'0') = '0' AND I.PRIMAMONEDA >= 0 THEN
				V_STSREC := 'ACT';
			ELSIF NVL (TRIM (I.STSSIT),'0') = '0' AND I.PRIMAMONEDA < 0 THEN
				V_STSREC := 'ACT';
			ELSIF TRIM (I.STSSIT) = '1' AND I.PRIMAMONEDA >= 0 THEN
				V_STSREC := 'COB';
			ELSIF TRIM (I.STSSIT) = '1' AND I.PRIMAMONEDA < 0 THEN
				V_STSREC := 'PAG';
			ELSIF TRIM (I.STSSIT) = '2' AND I.PRIMAMONEDA >= 0 THEN
				V_STSREC := 'COB';
			ELSIF TRIM (I.STSSIT) = '2' AND I.PRIMAMONEDA < 0 THEN
				V_STSREC := 'PAG';
			ELSIF TRIM (I.STSSIT) = '3' AND I.PRIMAMONEDA < 0 THEN
				V_STSREC := 'ANU';
			ELSE
				V_STSREC := 'ACT';
			END IF;
			--
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET TIPOMOV = V_TIPOMOV,
				STSREC = V_STSREC
			WHERE MIGRA = 'S'
			AND RAMO = I.RAMO
			AND POLIZA = I.POLIZA
			AND NUMREC = I.NUMREC;
			COMMIT;
		END LOOP;
		--
		FOR I IN (
			SELECT DISTINCT CODPROD,CODPLAN,REVPLAN,CODRAMOCERT,CODCOBERT
			FROM EQ_POLIZA_NO_MIGRADO
			WHERE MIGRA = 'S'
		)
		LOOP
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET CODRAMOREA = (
				SELECT CODRAMOREA
				FROM COBERT_PLAN_PROD@PROD
				WHERE CODPROD = I.CODPROD
				AND CODPLAN = I.CODPLAN
				AND REVPLAN = I.REVPLAN
				AND CODRAMOPLAN = I.CODRAMOCERT
				AND CODCOBERT = I.CODCOBERT),
			TIPOCOBERT = (
				SELECT TIPOCOBERT
				FROM COBERT_PLAN_PROD@PROD
				WHERE CODPROD = I.CODPROD
				AND CODPLAN = I.CODPLAN
				AND REVPLAN = I.REVPLAN
				AND CODRAMOPLAN = I.CODRAMOCERT
				AND CODCOBERT = I.CODCOBERT
			),
			INDACUMULASUMA = (
				SELECT INDACUMULASUMA
				FROM COBERT_PLAN_PROD@PROD
				WHERE CODPROD = I.CODPROD
				AND CODPLAN = I.CODPLAN
				AND REVPLAN = I.REVPLAN
				AND CODRAMOPLAN = I.CODRAMOCERT
				AND CODCOBERT = I.CODCOBERT
			),
			INDACUMULAPRIMA = (
				SELECT INDACUMULAPRIMA
				FROM COBERT_PLAN_PROD@PROD
				WHERE CODPROD = I.CODPROD
				AND CODPLAN = I.CODPLAN
				AND REVPLAN = I.REVPLAN
				AND CODRAMOPLAN = I.CODRAMOCERT
				AND CODCOBERT = I.CODCOBERT
			),
			MIGRAREA = 'S'
			WHERE MIGRA = 'S'
			AND CODPROD = I.CODPROD
			AND CODPLAN = I.CODPLAN
			AND REVPLAN = I.REVPLAN
			AND CODRAMOCERT = I.CODRAMOCERT
			AND CODCOBERT = I.CODCOBERT;
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRAREA = 'N'
		WHERE MIGRA = 'S'
		AND CODRAMOREA IS NULL
		AND TIPOCOBERT IS NULL;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRAREA = 'N'
		WHERE MIGRA = 'N';
		COMMIT;
		--
		UPDATE EQ_POLIZA_NO_MIGRADO
		SET MIGRA = 'N',
			RAZONMIGRA = 'SUMAASEG demasiado largo'
		WHERE MIGRA = 'S'
		AND LENGTH (SUMAASEG) > 12;
		COMMIT;
		--
	END COMPLETA_RECIBO;
	--
	PROCEDURE GEN_CODCLI
	IS
		v_TIPOID 		EQ_POLIZA_NO_MIGRADO.TIPOID%TYPE;
		v_NUMID 		EQ_POLIZA_NO_MIGRADO.NUMID%TYPE;
		v_DVID 			EQ_POLIZA_NO_MIGRADO.DVID%TYPE;
		V_CODCLIFACT 	EQ_POLIZA_NO_MIGRADO.CODCLI%TYPE;
		vDUMMY 			NUMBER;
	BEGIN
		FOR I IN (
			SELECT DISTINCT RAMO,POLIZA,NUMCERT,CODBE,CODPROD
			FROM EQ_POLIZA_NO_MIGRADO
			WHERE MIGRA = 'S'
		)
		LOOP
			vDUMMY := 0;
			V_TIPOID := NULL;
			V_NUMID := NULL;
			V_DVID := NULL;
			V_CODCLIFACT := NULL;
			--
			BEGIN
				SELECT 1 INTO vDUMMY
				FROM CTRALTAB
				WHERE ACTIAR = 101
				AND SUBSTR (ACFUNC,50,1) = 'C'
				AND ACARGU = I.RAMO;
				--
				BEGIN
					SELECT TIPOID,NUMID,DVID INTO V_TIPOID,V_NUMID,V_DVID
					FROM EQ_CLPF05_FAM
					WHERE RAMO = I.RAMO
					AND POLIZA = I.POLIZA
					AND NUMCER = I.NUMCERT
					AND COFAAM = I.CODBE;
					--
					SELECT TIPOID,NUMID,DVID INTO V_TIPOID,V_NUMID,V_DVID
					FROM EQ_CLPF07
					WHERE RAMO = I.RAMO
					AND POLIZA = I.POLIZA
					AND CERVEH = I.NUMCERT;
				EXCEPTION WHEN NO_DATA_FOUND THEN
					V_TIPOID := NULL;
					V_NUMID := NULL;
					V_DVID := NULL;
					V_CODCLIFACT := NULL;
				END;
			EXCEPTION WHEN NO_DATA_FOUND THEN
				BEGIN
					SELECT TIPOID,NUMID,DVID INTO V_TIPOID,V_NUMID,V_DVID
					FROM EQ_HJPF01
					WHERE RAMO = I.RAMO
					AND POLIZA = I.POLIZA;
				EXCEPTION WHEN NO_DATA_FOUND THEN
					BEGIN
						SELECT TIPOID,NUMID,DVID
						INTO V_TIPOID,V_NUMID,V_DVID
						FROM HJPF01_SINIESTRO
						WHERE RAMO = I.RAMO
						AND POLIZA = I.POLIZA;
					EXCEPTION WHEN NO_DATA_FOUND THEN
						BEGIN
							SELECT TIPOID,NUMID,DVID
							INTO V_TIPOID,V_NUMID,V_DVID
							FROM ACSEL.CLIENTE@CERT
							WHERE CODCLI IN (
								SELECT CODCLI
								FROM ACSEL.POLIZA@CERT
								WHERE CODPOL = I.CODPROD
								AND NUMPOL = I.POLIZA
							);
						EXCEPTION WHEN NO_DATA_FOUND THEN
							V_TIPOID := 9;
							V_NUMID := 99999999999999;
							V_DVID := '9';
						END;
					END;
				END;
			END;
			--
			V_CODCLIFACT := PM.GENERA_CODCLI (V_TIPOID,V_NUMID,V_DVID);
			--
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET TIPOID = V_TIPOID,
				NUMID = V_NUMID,
				DVID = V_DVID,
				CODCLI = V_CODCLIFACT
			WHERE RAMO = I.RAMO
			AND POLIZA = I.POLIZA
			AND NUMCERT = I.NUMCERT;
			COMMIT;
		END LOOP;
		--
		FOR I IN (
			SELECT RAMO,POLIZA,NUMCERT
			FROM EQ_POLIZA_NO_MIGRADO
			WHERE CODCLI IS NULL
			AND MIGRA = 'S'
			GROUP BY RAMO,POLIZA,NUMCERT
		)
		LOOP
			V_TIPOID := 9;
			V_NUMID := 99999999999999;
			V_DVID := '9';
			--
			UPDATE EQ_POLIZA_NO_MIGRADO
			SET TIPOID = V_TIPOID,
				NUMID = V_NUMID,
				DVID = V_DVID,
				CODCLI = PM.GENERA_CODCLI (V_TIPOID,V_NUMID,V_DVID)
			WHERE RAMO = I.RAMO
			AND POLIZA = I.POLIZA
			AND NUMCERT = I.NUMCERT
			AND CODCLI IS NULL
			AND MIGRA = 'S';
			COMMIT;
		END LOOP;
	END GEN_CODCLI;
	--
	PROCEDURE INS_TABLAS_EQ
	IS
		CURSOR CUR_VIG_POLIZA (
			pRAMO 	ACSMIGRE.VIG_POLIZA.RAMO_AS@DESA%TYPE,
			pPOLIZA ACSMIGRE.VIG_POLIZA.POLIZA_AS@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_POLIZA@DESA
		WHERE RAMO_AS = pRamo
		AND POLIZA_AS = pPOLIZA;
		--
		RT_CUR_VIG_POLIZA 	CUR_VIG_POLIZA%ROWTYPE;
		--
		CURSOR CUR_VIG_RECIBO (
			pRAMO 			ACSMIGRE.VIG_RECIBO.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_RECIBO.POLIZA_AS@DESA%TYPE,
			pNUMCERT		ACSMIGRE.VIG_RECIBO.NUMCERT@DESA%TYPE,
			pCODRAMOCERT	ACSMIGRE.VIG_RECIBO.CODRAMOCERT@DESA%TYPE,
			pNUMREC			ACSMIGRE.VIG_RECIBO.NUMREC@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_RECIBO@DESA
		WHERE RAMO_AS = pRamo
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND NUMREC = pNUMREC;
		--
		RT_CUR_VIG_RECIBO	CUR_VIG_RECIBO%ROWTYPE;
		--
		CURSOR CUR_VIG_CERTIFICADO (
			pRAMO 			ACSMIGRE.VIG_CERTIFICADO.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_CERTIFICADO.POLIZA_AS@DESA%TYPE,
			pNUMCERT 		ACSMIGRE.VIG_CERTIFICADO.NUMCERT@DESA%TYPE,
			pCODRAMOCERT 	ACSMIGRE.VIG_CERTIFICADO.CODRAMOCERT@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_CERTIFICADO@DESA
		WHERE RAMO_AS = pRamo
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT;
		--
		RT_CUR_VIG_CERTIFICADO	CUR_VIG_CERTIFICADO%ROWTYPE;
		--
		CURSOR CUR_VIG_COBERT_CERT (
			pRAMO 			ACSMIGRE.VIG_COBERT_CERT.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_COBERT_CERT.POLIZA_AS@DESA%TYPE,
			pNUMCERT 		ACSMIGRE.VIG_COBERT_CERT.NUMCERT@DESA%TYPE,
			pCODRAMOCERT 	ACSMIGRE.VIG_COBERT_CERT.CODRAMOCERT@DESA%TYPE,
			pCODCOBERT 		ACSMIGRE.VIG_COBERT_CERT.CODCOBERT@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_COBERT_CERT@DESA
		WHERE RAMO_AS = pRamo
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND CODCOBERT = pCODCOBERT;
		--
		RT_CUR_VIG_COBERT_CERT 	CUR_VIG_COBERT_CERT%ROWTYPE;
		--
		CURSOR CUR_VIG_COBERT_CERT_REC (
			pRAMO 			ACSMIGRE.VIG_COBERT_CERT_REC.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_COBERT_CERT_REC.POLIZA_AS@DESA%TYPE,
			pNUMCERT 		ACSMIGRE.VIG_COBERT_CERT_REC.NUMCERT@DESA%TYPE,
			pCODRAMOCERT	ACSMIGRE.VIG_COBERT_CERT_REC.CODRAMOCERT@DESA%TYPE,
			pCODCOBERT		ACSMIGRE.VIG_COBERT_CERT_REC.CODCOBERT@DESA%TYPE,
			pNUMREC			ACSMIGRE.VIG_COBERT_CERT_REC.NUMREC@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_COBERT_CERT_REC@DESA
		WHERE RAMO_AS = pRamo
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND CODCOBERT = pCODCOBERT
		AND NUMREC = pNUMREC;
		--
		RT_CUR_VIG_COBERT_CERT_REC	CUR_VIG_COBERT_CERT_REC%ROWTYPE;
		--
		CURSOR CUR_VIG_ASEGURADO (
			pRAMO 			ACSMIGRE.VIG_ASEGURADO.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_ASEGURADO.POLIZA_AS@DESA%TYPE,
			pNUMCERT 		ACSMIGRE.VIG_ASEGURADO.NUMCERT@DESA%TYPE,
			pCODRAMOCERT 	ACSMIGRE.VIG_ASEGURADO.CODRAMOCERT@DESA%TYPE,
			pTIPOID			ACSMIGRE.VIG_ASEGURADO.TIPOID@DESA%TYPE,
			pNUMID 			ACSMIGRE.VIG_ASEGURADO.NUMID@DESA%TYPE,
			pDVID 			ACSMIGRE.VIG_ASEGURADO.DVID@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_ASEGURADO@DESA
		WHERE RAMO_AS = pRAMO
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND TIPOID = pTIPOID
		AND NUMID = pNUMID
		AND DVID = pDVID;
		--
		RT_CUR_VIG_ASEGURADO 	CUR_VIG_ASEGURADO%ROWTYPE;
		--
		CURSOR CUR_VIG_ASEGURADO_REC (
			pRAMO 			ACSMIGRE.VIG_ASEGURADO_REC.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_ASEGURADO_REC.POLIZA_AS@DESA%TYPE,
			pNUMCERT		ACSMIGRE.VIG_ASEGURADO_REC.NUMCERT@DESA%TYPE,
			pCODRAMOCERT	ACSMIGRE.VIG_ASEGURADO_REC.CODRAMOCERT@DESA%TYPE,
			pTIPOID 		ACSMIGRE.VIG_ASEGURADO_REC.TIPOID@DESA%TYPE,
			pNUMID 			ACSMIGRE.VIG_ASEGURADO_REC.NUMID@DESA%TYPE,
			pDVID 			ACSMIGRE.VIG_ASEGURADO_REC.DVID@DESA%TYPE,
			pNUMREC			ACSMIGRE.VIG_ASEGURADO_REC.NUMREC@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_ASEGURADO_REC@DESA
		WHERE RAMO_AS = pRAMO
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND TIPOID = pTIPOID
		AND NUMID = pNUMID
		AND DVID = pDVID
		AND NUMREC = pNUMREC;
		--
		RT_CUR_VIG_ASEGURADO_REC 	CUR_VIG_ASEGURADO_REC%ROWTYPE;
		--
		CURSOR CUR_VIG_COBERT_ASEG (
			pRAMO 			ACSMIGRE.VIG_COBERT_ASEG.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_COBERT_ASEG.POLIZA_AS@DESA%TYPE,
			pNUMCERT 		ACSMIGRE.VIG_COBERT_ASEG.NUMCERT@DESA%TYPE,
			pCODRAMOCERT 	ACSMIGRE.VIG_COBERT_ASEG.CODRAMOCERT@DESA%TYPE,
			pTIPOID 		ACSMIGRE.VIG_COBERT_ASEG.TIPOID@DESA%TYPE,
			pNUMID 			ACSMIGRE.VIG_COBERT_ASEG.NUMID@DESA%TYPE,
			pDVID 			ACSMIGRE.VIG_COBERT_ASEG.DVID@DESA%TYPE,
			pCODCOBERT 		ACSMIGRE.VIG_COBERT_ASEG.CODCOBERT@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_COBERT_ASEG@DESA
		WHERE RAMO_AS = pRAMO
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND TIPOID = pTIPOID
		AND NUMID = pNUMID
		AND DVID = pDVID
		AND CODCOBERT = pCODCOBERT;
		--
		RT_CUR_VIG_COBERT_ASEG 	CUR_VIG_COBERT_ASEG%ROWTYPE;
		--
		CURSOR CUR_VIG_COBERT_ASEG_REC (
			pRAMO 			ACSMIGRE.VIG_COBERT_ASEG_REC.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_COBERT_ASEG_REC.POLIZA_AS@DESA%TYPE,
			pNUMCERT 		ACSMIGRE.VIG_COBERT_ASEG_REC.NUMCERT@DESA%TYPE,
			pCODRAMOCERT 	ACSMIGRE.VIG_COBERT_ASEG_REC.CODRAMOCERT@DESA%TYPE,
			pTIPOID 		ACSMIGRE.VIG_COBERT_ASEG_REC.TIPOID@DESA%TYPE,
			pNUMID 			ACSMIGRE.VIG_COBERT_ASEG_REC.NUMID@DESA%TYPE,
			pDVID 			ACSMIGRE.VIG_COBERT_ASEG_REC.DVID@DESA%TYPE,
			pCODCOBERT 		ACSMIGRE.VIG_COBERT_ASEG_REC.CODCOBERT@DESA%TYPE,
			pNUMREC 		ACSMIGRE.VIG_COBERT_ASEG_REC.NUMREC@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_COBERT_ASEG_REC@DESA
		WHERE RAMO_AS = pRAMO
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND TIPOID = pTIPOID
		AND NUMID = pNUMID
		AND DVID = pDVID
		AND CODCOBERT = pCODCOBERT
		AND NUMREC = pNUMREC;
		--
		RT_CUR_VIG_COBERT_ASEG_REC	CUR_VIG_COBERT_ASEG_REC%ROWTYPE;
		--
		CURSOR CUR_VIG_BIEN_CERT (
			pRAMO			ACSMIGRE.VIG_BIEN_CERT.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_BIEN_CERT.POLIZA_AS@DESA%TYPE,
			pNUMCERT 		ACSMIGRE.VIG_BIEN_CERT.NUMCERT@DESA%TYPE,
			pCODRAMOCERT 	ACSMIGRE.VIG_BIEN_CERT.CODRAMOCERT@DESA%TYPE,
			pCODBIEN 		ACSMIGRE.VIG_BIEN_CERT.CODBIEN@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_BIEN_CERT@DESA
		WHERE RAMO_AS = pRAMO
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND CODBIEN = pCODBIEN;
		--
		RT_CUR_VIG_BIEN_CERT	CUR_VIG_BIEN_CERT%ROWTYPE;
		--
		CURSOR CUR_VIG_COBERT_BIEN (
			pRAMO 			ACSMIGRE.VIG_COBERT_BIEN.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_COBERT_BIEN.POLIZA_AS@DESA%TYPE,
			pNUMCERT 		ACSMIGRE.VIG_COBERT_BIEN.NUMCERT@DESA%TYPE,
			pCODRAMOCERT 	ACSMIGRE.VIG_COBERT_BIEN.CODRAMOCERT@DESA%TYPE,
			pCODBIEN 		ACSMIGRE.VIG_COBERT_BIEN.CODBIEN@DESA%TYPE,
			pCODCOBERT 		ACSMIGRE.VIG_COBERT_BIEN.CODCOBERT@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_COBERT_BIEN@DESA
		WHERE RAMO_AS = pRAMO
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND CODBIEN = pCODBIEN
		AND CODCOBERT = pCODCOBERT;
		--
		RT_CUR_VIG_COBERT_BIEN 	CUR_VIG_COBERT_BIEN%ROWTYPE;
		--
		CURSOR CUR_VIG_COBERT_BIEN_REC (
			pRAMO 			ACSMIGRE.VIG_COBERT_BIEN_REC.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_COBERT_BIEN_REC.POLIZA_AS@DESA%TYPE,
			pNUMCERT 		ACSMIGRE.VIG_COBERT_BIEN_REC.NUMCERT@DESA%TYPE,
			pCODRAMOCERT 	ACSMIGRE.VIG_COBERT_BIEN_REC.CODRAMOCERT@DESA%TYPE,
			pCODBIEN 		ACSMIGRE.VIG_COBERT_BIEN_REC.CODBIEN@DESA%TYPE,
			pCODCOBERT 		ACSMIGRE.VIG_COBERT_BIEN_REC.CODCOBERT@DESA%TYPE,
			pNUMREC 		ACSMIGRE.VIG_COBERT_BIEN_REC.NUMREC@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_COBERT_BIEN_REC@DESA
		WHERE RAMO_AS = pRAMO
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMOCERT = pCODRAMOCERT
		AND CODBIEN = pCODBIEN
		AND CODCOBERT = pCODCOBERT
		AND NUMREC = pNUMREC;
		--
		RT_CUR_VIG_COBERT_BIEN_REC	CUR_VIG_COBERT_BIEN_REC%ROWTYPE;
		--
		CURSOR CUR_POLIZA
		IS
		SELECT
			CODPROD CODPOL,POLIZA NUMPOL,NUMREN NUMREN,RAMO RAMO_AS,POLIZA POLIZA_AS,CODPROD CODPROD,
			STSPOL STSPOL,TIPOID TIPOID,NUMID NUMID,DVID DVID,NULL FECREN,FECINIVIG FECINIVIG,FECFINVIG FECFINVIG,
			TIPOVIG TIPOVIG,TIPOPDCION TIPOPDCION,TIPOFACT TIPOFACT,INDCOA INDCOA,CODFORMFCION CODFORMFCION,
			CODOFIEMI CODOFIEMI,CODOFISUSC CODOFISUSC,CODMONEDA CODMONEDA,TIPOSUSC TIPOSUSC,CODFORMPAGO CODFORMPAGO,
			NULL FECULTFACT,NULL INDRENOVLOTE,NULL CODCONDCOBRO,NULL RESPCOB,CODGRP CODGRP,NULL FECINGPOL,
			FECEMI FECEMI,CODINTER CODINTER
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S';
		--
		CURSOR CUR_RECIBO
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT NUMCERT,CODRAMOCERT CODRAMOCERT,NUMREC NUMREC,TIPOID TIPOID,
			NUMID NUMID,DVID DVID,CODMONEDA CODMONEDA,FECEMI FECEMI,FECINIVALID FECINIVALID,FECFINVALID FECFINVALID,
			CODOFIEMI CODOFIEMI,TIPOMOV TIPOMOV,MONTOPRIMA MONTOPRIMA,TASACAMBIO TASACAMBIO,PORCCOM PORCCOM,
			MTOCOMISION MTOCOMISION,STSREC STSREC,NULL STSRECFIN,PRIMAMONEDA MONTOPRIMAMON,NULL MTOCOMISIONMON,
			NULL CODOFICOB,NULL FECCOBRO
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S';
		--
		CURSOR CUR_CERTIFICADO
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT NUMCERT,STSCERT STSCERT,DESCCERT DESCCERT,FECING FECING,TIPOID,NUMID,
			DVID,TIPOID TIPOIDFACT,NUMID NUMIDFACT,DVID DVIDFACT,CODCLI CODCLIFACT,CLASERIESGO CLASERIESGO,NULL CODEXTERNO,
			NULL FECEMP,NULL FECANTCERT,CODRAMOCERT,FECINIVALID,FECFINVALID,NULL CODCUMULO,CODPLAN,REVPLAN
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S';
		--
		CURSOR CUR_COBERT_CERT
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT NUMCERT,CODRAMOCERT CODRAMOCERT,CODPLAN CODPLAN,REVPLAN REVPLAN,
			CODCOBERT CODCOBERT,STSCOBERT STSCOBERT,SUMAASEGMONEDA SUMAASEGMONEDA,TASACAMBIO TASA,PRIMAMONEDA PRIMAMONEDA,
			CODMONEDA CODMONEDA,SUMAASEG SUMAASEG,PRIMAMONEDA PRIMA,FECINIVALID FECINIVALID,FECFINVALID FECFINVALID,
			NULL INDSUMADED,NULL PORCDED,NULL MTODEDMIN,NULL BASEDED,NULL PORCDESC,NULL ORDEN,NULL PORCREEMB,
			NULL PORCMINASEG
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S';
		--
		CURSOR CUR_COBERT_CERT_REC
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT NUMCERT,CODPLAN CODPLAN,REVPLAN REVPLAN,CODCOBERT CODCOBERT,
			TO_NUMBER (NUMREC) NUMREC,SUMAASEG SUMAASEG,TASACAMBIO TASA,PRIMAMONEDA PRIMA,FECINIVALID FECINIVALID,
			FECFINVALID FECFINVALID,PRIMAMONEDA PRIMAANUAL,CODRAMOCERT CODRAMOCERT,PRIMAMONEDA PRIMAMON
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S';
		--
		CURSOR CUR_ASEGURADO
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT NUMCERT,CODRAMOCERT CODRAMOCERT,TIPOID TIPOID,NUMID NUMID,
			DVID DVID,INDASEGTITULAR INDASEGTITULAR,NULL MTOTOTRECAMONEDA,NULL MTOTOTDCTOMONEDA,CODMONEDA CODMONEDA,
			PRIMAMONEDA PRIMA,FECING FECING,NULL FECEXC,CODPLAN CODPLAN,REVPLAN REVPLAN,CODPARENT CODPARENT,
			NULL FECANTASEG
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S'
		AND RAMO IN (
			SELECT TO_NUMBER (ACARGU) FROM CTRALTAB
			WHERE ACTIAR = 4855 AND TRIM (ACARGU) <> '**'
		);
		--
		CURSOR CUR_ASEGURADO_REC
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,TIPOID TIPOID,NUMID NUMID,DVID DVID,
			NUMCERT NUMCERT,CODRAMOCERT CODRAMOCERT,NUMREC NUMREC
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S'
		AND RAMO IN (
			SELECT TO_NUMBER (ACARGU) FROM CTRALTAB
			WHERE ACTIAR = 4855 AND TRIM (ACARGU) <> '**'
		);
		--
		CURSOR CUR_COBERT_ASEG
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT,CODRAMOCERT,TIPOID,NUMID,DVID,CODPLAN,REVPLAN,CODCOBERT,STSCOBERT,
			NUMREC,SUMAASEGMONEDA SUMAASEG,TASACAMBIO TASA,PRIMAMONEDA PRIMA,CODMONEDA,SUMAASEGMONEDA,PRIMAMONEDA,
			FECINIVALID,FECFINVALID,NULL INDINCREN,NULL ORDEN,NULL PORCREEMB
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S'
		AND RAMO IN (
			SELECT TO_NUMBER (ACARGU) FROM CTRALTAB
			WHERE ACTIAR = 4855 AND TRIM (ACARGU) <> '**'
		);
		--
		CURSOR CUR_COBERT_ASEG_REC
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT,CODRAMOCERT,TIPOID,NUMID,DVID,CODPLAN,REVPLAN,CODCOBERT,NUMREC,
			SUMAASEGMONEDA SUMAASEG,TASACAMBIO TASA,PRIMAMONEDA PRIMA,FECINIVALID,FECFINVALID,PRIMAMONEDA PRIMAANUAL
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S'
		AND RAMO IN (
			SELECT TO_NUMBER (ACARGU) FROM CTRALTAB
			WHERE ACTIAR = 4855 AND TRIM (ACARGU) <> '**'
		);
		--
		CURSOR CUR_BIEN_CERT
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT NUMCERT,CODRAMOCERT CODRAMOCERT,CODMONEDA CODMONEDA,
			CLASEBIEN CLASEBIEN,CODBIEN CODBIEN,STSBIEN STSBIEN,NULL MTOVALBIEN,NULL MTOVALBIENMONEDA,
			NULL PORCRIESGO,NULL TIPO1ERIESGO,NULL INDMEGARIESGO,NULL DESCBIEN,NULL PORCPERIND,NULL INDAUMVAL,
			SUMAASEG SUMAASEG,NULL IDEBIENPLNS,NULL IDEBIENCASLO
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S'
		AND RAMO IN (
			SELECT TO_NUMBER (ACARGU) FROM CTRALTAB
			WHERE ACTIAR = 4852 AND TRIM (ACARGU) <> '**'
		);
		--
		CURSOR CUR_COBERT_BIEN
		IS
		SELECT
			CODPLAN,REVPLAN,CODCOBERT,RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT,CODBIEN,CODRAMOCERT,STSCOBERT,
			SUMAASEG,TASACAMBIO TASA,MONTOPRIMA PRIMA,CODMONEDA,SUMAASEGMONEDA,PRIMAMONEDA,FECINIVALID,
			FECFINVALID,NULL PORCDED,NULL MTODEDMIN,NULL BASEDED,NULL PORCDESC,NULL INDSUMADED,NULL ORDEN,
			NULL PORCREEMB,NULL PORCMINASEG,TASACAMBIO TASABRUTA
		FROM EQ_POLIZA_NO_MIGRADO
		WHERE MIGRA = 'S'
		AND RAMO IN (
			SELECT TO_NUMBER (ACARGU) FROM CTRALTAB
			WHERE ACTIAR = 4852 AND TRIM (ACARGU) <> '**'
		);
		--
		CURSOR CUR_COBERT_BIEN_REC
		IS
			SELECT
				RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT,CODRAMOCERT,CODBIEN,CODPLAN,REVPLAN,CODCOBERT,NUMREC,SUMAASEG,
				TASACAMBIO TASA,MONTOPRIMA PRIMA,FECINIVALID,FECFINVALID,MONTOPRIMA PRIMAANUAL,PRIMAMONEDA PRIMAMON
			FROM EQ_POLIZA_NO_MIGRADO
			WHERE MIGRA = 'S'
			AND RAMO IN (
				SELECT TO_NUMBER (ACARGU) FROM CTRALTAB
				WHERE ACTIAR = 4852 AND TRIM (ACARGU) <> '**'
			);
	BEGIN
		FOR I IN CUR_POLIZA
		LOOP
			OPEN CUR_VIG_POLIZA (I.RAMO_AS,I.POLIZA_AS);
			FETCH CUR_VIG_POLIZA INTO RT_CUR_VIG_POLIZA;

			IF CUR_VIG_POLIZA%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_POLIZA@DESA (
					CODPOL,NUMPOL,NUMREN,RAMO_AS,POLIZA_AS,CODPROD,STSPOL,TIPOID,NUMID,DVID,FECREN,
					FECINIVIG,FECFINVIG,TIPOVIG,TIPOPDCION,TIPOFACT,INDCOA,CODFORMFCION,CODOFIEMI,
					CODOFISUSC,CODMONEDA,TIPOSUSC,CODFORMPAGO,FECULTFACT,INDRENOVLOTE,CODCONDCOBRO,
					RESPCOB,CODGRP,FECINGPOL,FECEMI,CODINTER
				)
				VALUES (
					I.CODPOL,I.NUMPOL,I.NUMREN,I.RAMO_AS,I.POLIZA_AS,I.CODPROD,I.STSPOL,I.TIPOID,I.NUMID,I.DVID,
					I.FECREN,I.FECINIVIG,I.FECFINVIG,I.TIPOVIG,I.TIPOPDCION,I.TIPOFACT,I.INDCOA,I.CODFORMFCION,
					I.CODOFIEMI,I.CODOFISUSC,I.CODMONEDA,I.TIPOSUSC,I.CODFORMPAGO,I.FECULTFACT,I.INDRENOVLOTE,
					I.CODCONDCOBRO,I.RESPCOB,I.CODGRP,I.FECINGPOL,I.FECEMI,I.CODINTER
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_POLIZA;
		END LOOP;
		--
		FOR I IN CUR_RECIBO
		LOOP
			OPEN CUR_VIG_RECIBO (I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.NUMREC);
			FETCH CUR_VIG_RECIBO INTO RT_CUR_VIG_RECIBO;

			IF CUR_VIG_RECIBO%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_RECIBO@DESA (
					RAMO_AS,POLIZA_AS,NUMCERT,CODRAMOCERT,NUMREC,TIPOID,NUMID,DVID,CODMONEDA,FECEMI,
					FECINIVALID,FECFINVALID,CODOFIEMI,TIPOMOV,MONTOPRIMA,TASACAMBIO,PORCCOM,MTOCOMISION,
					STSREC,STSRECFIN,MONTOPRIMAMON,MTOCOMISIONMON,CODOFICOB,FECCOBRO
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.NUMREC,I.TIPOID,I.NUMID,I.DVID,
					I.CODMONEDA,I.FECEMI,I.FECINIVALID,I.FECFINVALID,I.CODOFIEMI,I.TIPOMOV,I.MONTOPRIMA,
					I.TASACAMBIO,I.PORCCOM,I.MTOCOMISION,I.STSREC,I.STSRECFIN,I.MONTOPRIMAMON,I.MTOCOMISIONMON,
					I.CODOFICOB,I.FECCOBRO
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_RECIBO;
		END LOOP;
		--
		FOR I IN CUR_CERTIFICADO
		LOOP
			OPEN CUR_VIG_CERTIFICADO (I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT);
			FETCH CUR_VIG_CERTIFICADO INTO RT_CUR_VIG_CERTIFICADO;

			IF CUR_VIG_CERTIFICADO%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_CERTIFICADO@DESA (
					RAMO_AS,POLIZA_AS,NUMCERT,STSCERT,DESCCERT,FECING,TIPOID,NUMID,DVID,TIPOIDFACT,NUMIDFACT,
					DVIDFACT,CODCLIFACT,CLASERIESGO,CODEXTERNO,FECEMP,FECANTCERT,CODRAMOCERT,FECINIVALID,
					FECFINVALID,CODCUMULO,CODPLAN,REVPLAN
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.STSCERT,I.DESCCERT,I.FECING,I.TIPOID,I.NUMID,I.DVID,
					I.TIPOIDFACT,I.NUMIDFACT,I.DVIDFACT,I.CODCLIFACT,I.CLASERIESGO,I.CODEXTERNO,I.FECEMP,
					I.FECANTCERT,I.CODRAMOCERT,I.FECINIVALID,I.FECFINVALID,I.CODCUMULO,I.CODPLAN,I.REVPLAN
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_CERTIFICADO;
		END LOOP;
		--
		FOR I IN CUR_COBERT_CERT
		LOOP
			OPEN CUR_VIG_COBERT_CERT (I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.CODCOBERT);
			FETCH CUR_VIG_COBERT_CERT INTO RT_CUR_VIG_COBERT_CERT;

			IF CUR_VIG_COBERT_CERT%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_COBERT_CERT@DESA (
					RAMO_AS,POLIZA_AS,NUMCERT,CODRAMOCERT,CODPLAN,REVPLAN,CODCOBERT,STSCOBERT,SUMAASEGMONEDA,
					TASA,PRIMAMONEDA,CODMONEDA,SUMAASEG,PRIMA,FECINIVALID,FECFINVALID,INDSUMADED,PORCDED,
					MTODEDMIN,BASEDED,PORCDESC,ORDEN,PORCREEMB,PORCMINASEG
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.CODPLAN,I.REVPLAN,I.CODCOBERT,
					I.STSCOBERT,I.SUMAASEGMONEDA,I.TASA,I.PRIMAMONEDA,I.CODMONEDA,I.SUMAASEG,I.PRIMA,
					I.FECINIVALID,I.FECFINVALID,I.INDSUMADED,I.PORCDED,I.MTODEDMIN,I.BASEDED,I.PORCDESC,
					I.ORDEN,I.PORCREEMB,I.PORCMINASEG
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_COBERT_CERT;
		END LOOP;
		--
		FOR I IN CUR_COBERT_CERT_REC
		LOOP
			OPEN CUR_VIG_COBERT_CERT_REC (
				I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.CODCOBERT,I.NUMREC
			);
			FETCH CUR_VIG_COBERT_CERT_REC INTO RT_CUR_VIG_COBERT_CERT_REC;

			IF CUR_VIG_COBERT_CERT_REC%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_COBERT_CERT_REC@DESA (
					RAMO_AS,POLIZA_AS,NUMCERT,CODPLAN,REVPLAN,CODCOBERT,NUMREC,SUMAASEG,TASA,PRIMA,
					FECINIVALID,FECFINVALID,PRIMAANUAL,CODRAMOCERT,PRIMAMON
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODPLAN,I.REVPLAN,I.CODCOBERT,I.NUMREC,I.SUMAASEG,
					I.TASA,I.PRIMA,I.FECINIVALID,I.FECFINVALID,I.PRIMAANUAL,I.CODRAMOCERT,I.PRIMAMON
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_COBERT_CERT_REC;
		END LOOP;
		--
		FOR I IN CUR_ASEGURADO
		LOOP
			OPEN CUR_VIG_ASEGURADO (
				I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.TIPOID,I.NUMID,I.DVID
			);
			FETCH CUR_VIG_ASEGURADO INTO RT_CUR_VIG_ASEGURADO;

			IF CUR_VIG_ASEGURADO%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_ASEGURADO@DESA (
					RAMO_AS,POLIZA_AS,NUMCERT,CODRAMOCERT,TIPOID,NUMID,DVID,INDASEGTITULAR,MTOTOTRECAMONEDA,
					MTOTOTDCTOMONEDA,CODMONEDA,PRIMA,FECING,FECEXC,CODPLAN,REVPLAN,CODPARENT,FECANTASEG
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.TIPOID,I.NUMID,I.DVID,I.INDASEGTITULAR,
					I.MTOTOTRECAMONEDA,I.MTOTOTDCTOMONEDA,I.CODMONEDA,I.PRIMA,I.FECING,I.FECEXC,I.CODPLAN,
					I.REVPLAN,I.CODPARENT,I.FECANTASEG
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_ASEGURADO;
		END LOOP;
		--
		FOR I IN CUR_ASEGURADO_REC
		LOOP
			OPEN CUR_VIG_ASEGURADO_REC (
				I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.TIPOID,I.NUMID,I.DVID,I.NUMREC
			);
			FETCH CUR_VIG_ASEGURADO_REC INTO RT_CUR_VIG_ASEGURADO_REC;

			IF CUR_VIG_ASEGURADO_REC%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_ASEGURADO_REC@DESA (
					RAMO_AS,POLIZA_AS,TIPOID,NUMID,DVID,NUMCERT,CODRAMOCERT,NUMREC
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.TIPOID,I.NUMID,I.DVID,I.NUMCERT,I.CODRAMOCERT,I.NUMREC
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_ASEGURADO_REC;
		END LOOP;
		--
		FOR I IN CUR_COBERT_ASEG
		LOOP
			OPEN CUR_VIG_COBERT_ASEG (I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.TIPOID,I.NUMID,I.DVID,I.CODCOBERT);
			FETCH CUR_VIG_COBERT_ASEG INTO RT_CUR_VIG_COBERT_ASEG;

			IF CUR_VIG_COBERT_ASEG%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_COBERT_ASEG@DESA (
					RAMO_AS,POLIZA_AS,NUMCERT,CODRAMOCERT,TIPOID,NUMID,DVID,CODPLAN,REVPLAN,
					CODCOBERT,STSCOBERT,NUMREC,SUMAASEG,TASA,PRIMA,CODMONEDA,SUMAASEGMONEDA,
					PRIMAMONEDA,FECINIVALID,FECFINVALID,INDINCREN,ORDEN,PORCREEMB
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.TIPOID,I.NUMID,I.DVID,
					I.CODPLAN,I.REVPLAN,I.CODCOBERT,I.STSCOBERT,I.NUMREC,I.SUMAASEG,I.TASA,
					I.PRIMA,I.CODMONEDA,I.SUMAASEGMONEDA,I.PRIMAMONEDA,I.FECINIVALID,I.FECFINVALID,
					I.INDINCREN,I.ORDEN,I.PORCREEMB
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_COBERT_ASEG;
		END LOOP;
		--
		FOR I IN CUR_COBERT_ASEG_REC
		LOOP
			OPEN CUR_VIG_COBERT_ASEG_REC (
				I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.TIPOID,I.NUMID,I.DVID,I.CODCOBERT,I.NUMREC
			);
			FETCH CUR_VIG_COBERT_ASEG_REC INTO RT_CUR_VIG_COBERT_ASEG_REC;

			IF CUR_VIG_COBERT_ASEG_REC%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_COBERT_ASEG_REC@DESA (
					RAMO_AS,POLIZA_AS,NUMCERT,CODRAMOCERT,TIPOID,NUMID,DVID,CODPLAN,REVPLAN,
					CODCOBERT,NUMREC,SUMAASEG,TASA,PRIMA,FECINIVALID,FECFINVALID,PRIMAANUAL
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.TIPOID,I.NUMID,I.DVID,I.CODPLAN,I.REVPLAN,
					I.CODCOBERT,I.NUMREC,I.SUMAASEG,I.TASA,I.PRIMA,I.FECINIVALID,I.FECFINVALID,I.PRIMAANUAL
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_COBERT_ASEG_REC;
		END LOOP;
		--
		FOR I IN CUR_BIEN_CERT
		LOOP
			OPEN CUR_VIG_BIEN_CERT (I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.CODBIEN);
			FETCH CUR_VIG_BIEN_CERT INTO RT_CUR_VIG_BIEN_CERT;

			IF CUR_VIG_BIEN_CERT%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_BIEN_CERT@DESA (
					RAMO_AS,POLIZA_AS,NUMCERT,CODRAMOCERT,CODMONEDA,CLASEBIEN,CODBIEN,STSBIEN,
					MTOVALBIEN,MTOVALBIENMONEDA,PORCRIESGO,TIPO1ERIESGO,INDMEGARIESGO,DESCBIEN,
					PORCPERIND,INDAUMVAL,SUMAASEG,IDEBIENPLNS,IDEBIENCASLO
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.CODMONEDA,I.CLASEBIEN,I.CODBIEN,
					I.STSBIEN,I.MTOVALBIEN,I.MTOVALBIENMONEDA,I.PORCRIESGO,I.TIPO1ERIESGO,I.INDMEGARIESGO,
					I.DESCBIEN,I.PORCPERIND,I.INDAUMVAL,I.SUMAASEG,I.IDEBIENPLNS,I.IDEBIENCASLO
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_BIEN_CERT;
		END LOOP;
		--
		FOR I IN CUR_COBERT_BIEN
		LOOP
			OPEN CUR_VIG_COBERT_BIEN (I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.CODBIEN,I.CODCOBERT);
			FETCH CUR_VIG_COBERT_BIEN INTO RT_CUR_VIG_COBERT_BIEN;

			IF CUR_VIG_COBERT_BIEN%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_COBERT_BIEN@DESA (
					CODPLAN,REVPLAN,CODCOBERT,RAMO_AS,POLIZA_AS,NUMCERT,CODBIEN,CODRAMOCERT,STSCOBERT,
					SUMAASEG,TASA,PRIMA,CODMONEDA,SUMAASEGMONEDA,PRIMAMONEDA,FECINIVALID,FECFINVALID,
					PORCDED,MTODEDMIN,BASEDED,PORCDESC,INDSUMADED,ORDEN,PORCREEMB,PORCMINASEG,TASABRUTA
				)
				VALUES (
					I.CODPLAN,I.REVPLAN,I.CODCOBERT,I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODBIEN,I.CODRAMOCERT,
					I.STSCOBERT,I.SUMAASEG,I.TASA,I.PRIMA,I.CODMONEDA,I.SUMAASEGMONEDA,I.PRIMAMONEDA,
					I.FECINIVALID,I.FECFINVALID,I.PORCDED,I.MTODEDMIN,I.BASEDED,I.PORCDESC,I.INDSUMADED,
					I.ORDEN,I.PORCREEMB,I.PORCMINASEG,I.TASABRUTA
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_COBERT_BIEN;
		END LOOP;
		--
		FOR I IN CUR_COBERT_BIEN_REC
		LOOP
			OPEN CUR_VIG_COBERT_BIEN_REC (
				I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.CODBIEN,I.CODCOBERT,I.NUMREC
			);
			FETCH CUR_VIG_COBERT_BIEN_REC INTO RT_CUR_VIG_COBERT_BIEN_REC;

			IF CUR_VIG_COBERT_BIEN_REC%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_COBERT_BIEN_REC@DESA (
					RAMO_AS,POLIZA_AS,NUMCERT,CODRAMOCERT,CODBIEN,CODPLAN,REVPLAN,CODCOBERT,NUMREC,
					SUMAASEG,TASA,PRIMA,FECINIVALID,FECFINVALID,PRIMAANUAL,PRIMAMON
				)
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOCERT,I.CODBIEN,I.CODPLAN,I.REVPLAN,I.CODCOBERT,
					I.NUMREC,I.SUMAASEG,I.TASA,I.PRIMA,I.FECINIVALID,I.FECFINVALID,I.PRIMAANUAL,I.PRIMAMON
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_COBERT_BIEN_REC;
		END LOOP;
	END INS_TABLAS_EQ;
	--
	PROCEDURE GEN_EQ_REPF14_NM
	IS
		CURSOR CUR_REPF14
		IS
		SELECT DISTINCT * FROM (
			SELECT
				A.RAMO,A.POLIZA,STSREC,A.NUMREC,TIPCON,A.SUMA,A.PRIMA,STSMAN,STSSIT,TIPMON,TIPCAM,SUMAE,
				PRIMAE,DECODE (GEN_REA.PRIMA,0,0,( (A.PRIMA * 100) / GEN_REA.PRIMA)) PORCENTAJE
			FROM REPF14_NM A,(
				SELECT RAMO,POLIZA,NUMREC,SUM (PRIMA) PRIMA
				FROM REPF14_NM GROUP BY RAMO,POLIZA,NUMREC
			) GEN_REA
			WHERE A.RAMO = GEN_REA.RAMO
			AND A.POLIZA = GEN_REA.POLIZA
			AND A.NUMREC = GEN_REA.NUMREC
		);
	BEGIN
		DELETE FROM EQ_REPF14_NM;
		COMMIT;
		--
		FOR I IN CUR_REPF14
		LOOP
			INSERT INTO EQ_REPF14_NM
			VALUES (
				I.RAMO,I.POLIZA,I.STSREC,I.NUMREC,I.TIPCON,I.SUMA,I.PRIMA,I.STSMAN,
				I.STSSIT,I.TIPMON,I.TIPCAM,I.SUMAE,I.PRIMAE,I.PORCENTAJE
			);
			COMMIT;
		END LOOP;
	END GEN_EQ_REPF14_NM;
	--
	PROCEDURE INSERTAR_DAT_EQ_REASEGURO_R
	IS
		CURSOR REASEGURO
		IS
		SELECT EQ.*,REN.TIPCON,REN.SUMA SUMAREA,REN.PRIMA PRIMAREA,REN.PORCENTAJE
		FROM EQ_POLIZA_NO_MIGRADO EQ,EQ_REPF14_NM REN
		WHERE EQ.RAMO = REN.RAMO
		AND EQ.POLIZA = REN.POLIZA
		AND EQ.NUMREC = REN.NUMREC
		AND EQ.MIGRA = 'S'
		AND EQ.MIGRAREA = 'S';
		--
		nMes 		NUMBER := 0;
		nSerieREA 	ACSEL.CTTO_REA.Serie@CERT%TYPE;
		cTipoCtto 	ACSEL.CTTO_REA.TipoCtto@CERT%TYPE;
		cIndSerie 	VARCHAR2 (1);
	BEGIN
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_REASEGURO_NM';
		--
		FOR I IN REASEGURO
		LOOP
			nMes := NULL;
			nSerieREA := NULL;
			cTipoCtto := NULL;
			--
			BEGIN
				IF I.CodRamoRea = '0103' OR I.CodRamoRea = '0030' THEN
					IF nMes >= 7 THEN
						nSerieREA := EXTRACT (YEAR FROM I.FECINIVALID);
					ELSE
						nSerieREA := EXTRACT (YEAR FROM I.FECINIVALID) - 1;
					END IF;
					--
					IF nSerieREA = 2010 OR nSerieREA = 2011 THEN
						IF I.TipCon = 2 THEN
							I.TipCon := 1;
						END IF;
					END IF;
				END IF;
				--
				IF I.CodRamoRea = '0101' OR I.CodRamoRea = '0104' THEN
					I.TipCon := 1;
				END IF;
				--
				IF I.CodRamoRea = '0102' OR I.CodRamoRea = '0106' THEN
					I.TipCon := 1;
				END IF;
				--
				IF I.CodRamoRea = '0041' OR I.CodRamoRea = '0043' OR I.CodRamoRea = '0082' THEN
					I.TipCon := 1;
				END IF;
				--
				IF I.CodProd IN ('FIAN','TRCO','TRMO') THEN
					IF nMes >= 7 THEN
						nSerieREA := EXTRACT (YEAR FROM I.FecEmi);
					ELSE
						nSerieREA := EXTRACT (YEAR FROM I.FecEmi) - 1;
					END IF;
				ELSE
					IF nMes >= 7 THEN
						nSerieREA := EXTRACT (YEAR FROM I.FecIniValid);
					ELSE
						nSerieREA := EXTRACT (YEAR FROM I.FecIniValid) - 1;
					END IF;
				END IF;
				--
				BEGIN
					SELECT TipoCtto INTO cTipoCtto
					FROM EQ_TIPOCTTO
					WHERE TipCon = I.TipCon;
				EXCEPTION WHEN NO_DATA_FOUND THEN
					cTipoCtto := NULL;
				END;
				--
				IF cTipoCtto = 'FOB' AND I.CodProd IN ('AUTI','AUTC') THEN
					cTipoCtto := 'FO1';
				END IF;
				--
				INSERT INTO EQ_REASEGURO_NM
				VALUES (
					I.RAMO,I.POLIZA,I.NUMREC,I.CODBE,I.CODCOB,I.NUMCERT,I.FECEMI,I.FECINIVALID,I.FECFINVALID,
					I.FECINIVIG,I.FECFINVIG,I.FECING,I.MIGRA,I.RAZONMIGRA,I.NUMREN,I.TIPOSUSC,I.CODRAMOCERT,
					I.CODCOBERT,I.STSCOBERT,I.BIECOB,I.CLASEBIEN,I.CODBIEN,I.STSBIEN,I.CODMONEDA,I.CODOFIEMI,
					I.CODPROD,I.CODPLAN,I.REVPLAN,I.CODPARENT,I.STSCERT,I.DESCCERT,I.STSPOL,I.TIPOVIG,I.TIPOPDCION,
					I.TIPOFACT,I.INDCOA,I.CODFORMFCION,I.CODOFISUSC,I.CODINTER,I.TIPOMOV,I.MONTOPRIMA,I.TASACAMBIO,
					I.PORCCOM,I.MTOCOMISION,I.STSREC,I.PRIMAR,I.STSSIT,I.CLASERIESGO,I.SUMAASEGMONEDA,I.PRIMAMONEDA,
					I.CODFORMPAGO,I.INDASEGTITULAR,I.SUMAASEG,I.TIPOID,I.NUMID,I.DVID,I.CODCLI,I.CODGRP,I.CODRAMOREA,
					I.MIGRAREA,I.TIPOCOBERT,I.INDACUMULASUMA,I.INDACUMULAPRIMA,I.TIPCON,I.SUMAREA,I.PRIMAREA,I.PORCENTAJE,NSerieREA
				);
				COMMIT;
			END;
		END LOOP;
		--
		UPDATE EQ_REASEGURO_NM
		SET MIGRA = 'N',
			RAZONMIGRA = 'Porcentaje en cero de Reaseguro'
		WHERE MIGRA = 'S'
		AND PORCENTAJE = 0;
		COMMIT;
		--
	END INSERTAR_DAT_EQ_REASEGURO_R;
	--
	PROCEDURE MIG_REASEGURO_EG
	IS
		CURSOR CUR_GEN_REA
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,NUMCERT,CODRAMOREA,SUM (SUMAASEG) SUMAASEG,SUM (PRIMAMOV) PRIMAMOV,FECINIVIG,
			FECFINVIG,FECEMI FECMOV,'ACT' STSGENREA,CLASERIESGO,1 ORDEN,NULL CODCUMULO,NULL FECANUL,NULL TIPOCODCUMULO,
			NUMREC,CODRAMOCERT CODRAMO,1 NUMGENREA
		FROM (
			SELECT
				RAMO,POLIZA,NUMCERT,CODRAMOREA,SUM (DECODE (INDACUMULASUMA,'N',0,SUMAREA)) SUMAASEG,
				SUM (DECODE (INDACUMULAPRIMA,'N',0,PRIMAREA)) PRIMAMOV,FECINIVIG,FECFINVIG,FECEMI,
				CLASERIESGO,NUMREC,CODRAMOCERT
			FROM EQ_REASEGURO_NM
			WHERE MIGRA = 'S'
			AND MIGRAREA = 'S'
			GROUP BY RAMO,POLIZA,NUMCERT,CODRAMOREA,FECINIVIG,FECFINVIG,FECEMI,CLASERIESGO,NUMREC,CODRAMOCERT
		)
		GROUP BY RAMO,POLIZA,NUMCERT,CODRAMOREA,FECINIVIG,FECFINVIG,FECEMI,CLASERIESGO,NUMREC,CODRAMOCERT;
		--
		CURSOR CUR_DIST_REA
		IS
		SELECT
			RAMO RAMO_AS,POLIZA POLIZA_AS,1 IDECTTOREA,1 NUMMODDISTREA,SUM (SUMADISTREA) SUMADISTREA,SUM (PRIMADISTREA) PRIMADISTREA,
			1 ORDENCTTO,NULL IDECIERRE,NULL IDEPOL,NULL SERIE,SUM (PORCENTAJE) PORCDISTTIPOCTTO,CLASERIESGO,1 NUMGENREA
		FROM (
			SELECT DISTINCT
				RAMO,POLIZA,NUMREC,CODBE,PORCENTAJE,
				DECODE(
					PORCENTAJE,100,SUM(DECODE (INDACUMULASUMA,'N',0,SUMAREA)),
					ROUND (SUM(DECODE(INDACUMULASUMA,'N',0,SUMAREA)) * ROUND ((PORCENTAJE / 100),2),2)
				) SUMADISTREA,
				DECODE (
					PORCENTAJE,100,SUM (DECODE (INDACUMULAPRIMA,'N',0,PRIMAREA)),
					ROUND (SUM (DECODE (INDACUMULAPRIMA,'N',0,PRIMAREA)) * ROUND ( (PORCENTAJE / 100),2),2)
				) PRIMADISTREA,
				DECODE (PORCENTAJE,100,PORCENTAJE,ROUND (PORCENTAJE,2)) PORCDISTTIPOCTTO,CLASERIESGO
			FROM EQ_REASEGURO_NM
			WHERE MIGRA = 'S'
			AND MIGRAREA = 'S'
			GROUP BY RAMO,POLIZA,NUMREC,CODBE,PORCENTAJE,CLASERIESGO
		)
		GROUP BY RAMO,POLIZA,NUMREC,CODBE,PORCENTAJE,CLASERIESGO;
		--
		CURSOR CUR_DIST_FACUL
		IS
		SELECT DISTINCT
			A.RAMO RAMO_AS,A.POLIZA POLIZA_AS,
			NVL ((SELECT CodAcepRiesgo FROM EQ_ACEP_RIESGO WHERE codrf = B.Codrf),LPAD (B.Codrf,6,0)) CODACEPRIESGO,
			0 NUMMODDISTREA,B.SUMARE SUMACEDIDA,B.PRIMRE PRIMACEDIDA,B.IMPRTA IMPRET,0 IMPREM,'ACT' STSDISTFACULT,
			PM.CONVIERTE_DIAMESANO_FECHA (DIASTS,MESSTS,ANOSTS) FECSTS,B.NUMCES NUMCESION,SERIEREA ANOCESION,
			NULL PRIMANETACESION,NULL PORCCOM,NULL PORCDEP,NULL INTDEP,NULL DIAPAGO,NULL NROCARTAENTREGA,NULL TEXTO,
			CODINTER,NULL PORIMPMUN,NULL PORAPORSUPER,PM.CONVIERTE_DIAMESANO_FECHA (DIAING,MESING,ANOING) FECINIVIG,
			PM.CONVIERTE_DIAMESANO_FECHA (DIAVEN,MESVEN,ANOVEN) FECFINVIG,NULL INDANULACION,NULL IDECTTOREA,
			NULL STSNUMCESION,NULL FECSTSNUMCESION,NULL NUMOBLIG,NULL NUMACRE,1 NUMGENREA
		FROM EQ_REASEGURO_NM A,REPF15_NM B
		WHERE A.RAMO = B.RAMO
		AND A.POLIZA = B.POLIZA
		AND A.NUMREC = B.NUMREC
		AND A.MIGRA = 'S'
		AND A.MIGRAREA = 'S'
		AND A.TIPCON = 19;
		--
		CURSOR CUR_DIAS_GAR_PAGO
		IS
		SELECT
			A.RAMO RAMO_AS,A.POLIZA POLIZA_AS,1 NUMGENREA,
			NVL ((SELECT CodAcepRiesgo FROM EQ_ACEP_RIESGO WHERE codrf = B.Codrf),LPAD (B.Codrf,6,0)) CODACEPRIESGO,
			0 NUMMODDISTREA,B.NUMCES NUMCESION,0 NROGARANTIA,NULL NNUMDIA,NULL FECGARPAGO,NULL PORCCANT,NULL FECPAGO,
			NULL NUMOBLIG,NULL INDPAGO,SERIEREA ANOCESION
		FROM EQ_REASEGURO_NM A,REPF15_NM B
		WHERE A.RAMO = B.RAMO
		AND A.POLIZA = B.POLIZA
		AND A.NUMREC = B.NUMREC
		AND A.MIGRA = 'S'
		AND A.MIGRAREA = 'S'
		AND A.TIPCON = 19;
		--
		CURSOR CUR_VIG_GEN_REA (
			pRAMO 			ACSMIGRE.VIG_GEN_REA.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_GEN_REA.POLIZA_AS@DESA%TYPE,
			pNUMCERT		ACSMIGRE.VIG_GEN_REA.NUMCERT@DESA%TYPE,
			pCODRAMO 		ACSMIGRE.VIG_GEN_REA.CODRAMO@DESA%TYPE,
			pNUMREC 		ACSMIGRE.VIG_GEN_REA.NUMREC@DESA%TYPE,
			pCODRAMOREA 	ACSMIGRE.VIG_GEN_REA.CODRAMOREA@DESA%TYPE,
			pNUMGENREA 		ACSMIGRE.VIG_GEN_REA.NUMGENREA@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_GEN_REA@DESA
		WHERE RAMO_AS = pRAMO
		AND POLIZA_AS = pPOLIZA
		AND NUMCERT = pNUMCERT
		AND CODRAMO = pCODRAMO
		AND NUMREC = pNUMREC
		AND CODRAMOREA = pCODRAMOREA
		AND NUMGENREA = pNUMGENREA;
		--
		RT_CUR_VIG_GEN_REA 	CUR_VIG_GEN_REA%ROWTYPE;
		--
		CURSOR CUR_VIG_DIST_REA (
			pRAMO_AS 		ACSMIGRE.VIG_DIST_REA.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_DIST_REA.POLIZA_AS@DESA%TYPE,
			pNUMGENREA		ACSMIGRE.VIG_DIST_REA.NUMGENREA@DESA%TYPE,
			pIDECTTOREA		ACSMIGRE.VIG_DIST_REA.IDECTTOREA@DESA%TYPE,
			pNUMMODDISTREA	ACSMIGRE.VIG_DIST_REA.NUMMODDISTREA@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_DIST_REA@DESA
		WHERE RAMO_AS = pRAMO_AS
		AND POLIZA_AS = pPOLIZA
		AND NUMGENREA = pNUMGENREA
		AND IDECTTOREA = pIDECTTOREA
		AND NUMMODDISTREA = pNUMMODDISTREA;
		--
		RT_CUR_VIG_DIST_REA 	CUR_VIG_DIST_REA%ROWTYPE;
		--
		CURSOR CUR_VIG_DIST_FACULT (
			pNUMGENREA 		ACSMIGRE.VIG_DIST_FACULT.NUMGENREA@DESA%TYPE,
			pCODACEPRIESGO 	ACSMIGRE.VIG_DIST_FACULT.CODACEPRIESGO@DESA%TYPE,
			pNUMMODDISTREA 	ACSMIGRE.VIG_DIST_FACULT.NUMMODDISTREA@DESA%TYPE,
			pNUMCESION 		ACSMIGRE.VIG_DIST_FACULT.NUMCESION@DESA%TYPE,
			pANOCESION		ACSMIGRE.VIG_DIST_FACULT.ANOCESION@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_DIST_FACULT@DESA
		WHERE NUMGENREA = pNUMGENREA
		AND CODACEPRIESGO = pCODACEPRIESGO
		AND NUMMODDISTREA = pNUMMODDISTREA
		AND NUMCESION = pNUMCESION
		AND ANOCESION = pANOCESION;
		--
		RT_CUR_VIG_DIST_FACULT	CUR_VIG_DIST_FACULT%ROWTYPE;
		--
		CURSOR CUR_VIG_DIAS_GAR_PAGO (
			pRAMO 			ACSMIGRE.VIG_DIAS_GAR_PAGO.RAMO_AS@DESA%TYPE,
			pPOLIZA 		ACSMIGRE.VIG_DIAS_GAR_PAGO.POLIZA_AS@DESA%TYPE,
			pNUMGENREA 		ACSMIGRE.VIG_DIAS_GAR_PAGO.NUMGENREA@DESA%TYPE,
			pCODACEPRIESGO	ACSMIGRE.VIG_DIAS_GAR_PAGO.CODACEPRIESGO@DESA%TYPE,
			pNUMMODDISTREA	ACSMIGRE.VIG_DIAS_GAR_PAGO.NUMMODDISTREA@DESA%TYPE,
			pNUMCESION		ACSMIGRE.VIG_DIAS_GAR_PAGO.NUMCESION@DESA%TYPE,
			pNROGARANTIA	ACSMIGRE.VIG_DIAS_GAR_PAGO.NROGARANTIA@DESA%TYPE
		)
		IS
		SELECT * FROM ACSMIGRE.VIG_DIAS_GAR_PAGO@DESA
		WHERE RAMO_AS = pRAMO
		AND POLIZA_AS = pPOLIZA
		AND NUMGENREA = pNUMGENREA
		AND CODACEPRIESGO = pCODACEPRIESGO
		AND NUMMODDISTREA = pNUMMODDISTREA
		AND NUMCESION = pNUMCESION
		AND NROGARANTIA = pNROGARANTIA;
		--
		RT_CUR_VIG_DIAS_GAR_PAGO 	CUR_VIG_DIAS_GAR_PAGO%ROWTYPE;
	BEGIN
		FOR I IN CUR_GEN_REA
		LOOP
			OPEN CUR_VIG_GEN_REA (
				I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMO,I.NUMREC,I.CODRAMOREA,I.NUMGENREA
			);
			FETCH CUR_VIG_GEN_REA INTO RT_CUR_VIG_GEN_REA;

			IF CUR_VIG_GEN_REA%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_GEN_REA@DESA
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMCERT,I.CODRAMOREA,I.SUMAASEG,I.PRIMAMOV,I.FECINIVIG,I.FECFINVIG,I.FECMOV,
					I.STSGENREA,I.CLASERIESGO,I.ORDEN,I.CODCUMULO,I.FECANUL,I.TIPOCODCUMULO,I.NUMREC,I.CODRAMO,I.NUMGENREA
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_GEN_REA;
		END LOOP;
		--
		FOR I IN CUR_DIST_REA
		LOOP
			OPEN CUR_VIG_DIST_REA (I.RAMO_AS,I.POLIZA_AS,I.NUMGENREA,I.IDECTTOREA,I.NUMMODDISTREA);
			FETCH CUR_VIG_DIST_REA INTO RT_CUR_VIG_DIST_REA;

			IF CUR_VIG_DIST_REA%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_DIST_REA@DESA
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.IDECTTOREA,I.NUMMODDISTREA,I.SUMADISTREA,I.PRIMADISTREA,I.ORDENCTTO,
					I.IDECIERRE,I.IDEPOL,I.SERIE,I.PORCDISTTIPOCTTO,I.CLASERIESGO,I.NUMGENREA
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_DIST_REA;
		END LOOP;
		--
		FOR I IN CUR_DIST_FACUL
		LOOP
			OPEN CUR_VIG_DIST_FACULT (I.NUMGENREA,I.CODACEPRIESGO,I.NUMMODDISTREA,I.NUMCESION,I.ANOCESION);
			FETCH CUR_VIG_DIST_FACULT INTO RT_CUR_VIG_DIST_FACULT;

			IF CUR_VIG_DIST_FACULT%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_DIST_FACULT@DESA
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.CODACEPRIESGO,I.NUMMODDISTREA,I.SUMACEDIDA,I.PRIMACEDIDA,I.IMPRET,I.IMPREM,
					I.STSDISTFACULT,I.FECSTS,I.NUMCESION,I.ANOCESION,I.PRIMANETACESION,I.PORCCOM,I.PORCDEP,I.INTDEP,
					I.DIAPAGO,I.NROCARTAENTREGA,I.TEXTO,I.CODINTER,I.PORIMPMUN,I.PORAPORSUPER,I.FECINIVIG,I.FECFINVIG,
					I.INDANULACION,I.IDECTTOREA,I.STSNUMCESION,I.FECSTSNUMCESION,I.NUMOBLIG,I.NUMACRE,I.NUMGENREA
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_DIST_FACULT;
		END LOOP;
		--
		FOR I IN CUR_DIAS_GAR_PAGO
		LOOP
			OPEN CUR_VIG_DIAS_GAR_PAGO (
				I.RAMO_AS,I.POLIZA_AS,I.NUMGENREA,I.CODACEPRIESGO,I.NUMMODDISTREA,I.NUMCESION,I.NROGARANTIA
			);
			FETCH CUR_VIG_DIAS_GAR_PAGO INTO RT_CUR_VIG_DIAS_GAR_PAGO;

			IF CUR_VIG_DIAS_GAR_PAGO%NOTFOUND THEN
				INSERT INTO ACSMIGRE.VIG_DIAS_GAR_PAGO@DESA
				VALUES (
					I.RAMO_AS,I.POLIZA_AS,I.NUMGENREA,I.CODACEPRIESGO,I.NUMMODDISTREA,I.NUMCESION,I.NROGARANTIA,
					I.NNUMDIA,I.FECGARPAGO,I.PORCCANT,I.FECPAGO,I.NUMOBLIG,I.INDPAGO,I.ANOCESION
				);
				COMMIT;
			END IF;
			CLOSE CUR_VIG_DIAS_GAR_PAGO;
		END LOOP;
		--
	END MIG_REASEGURO_EG;
	--
END MIGRA_POLIZA_MIGCARTEI_N;