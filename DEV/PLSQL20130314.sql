CREATE OR REPLACE PACKAGE MIGRA.MIG_TERCERO_EG
AS
	PROCEDURE GENERA_TABLAS_EQ_TERCEROS;
	PROCEDURE GENERA_TABLAS_EQ_TERCEROS_M;
	PROCEDURE GENERA_EQ_MENORES;
	PROCEDURE GENERA_DATA_SIN_EQ;
	PROCEDURE MIGRACION_GENERAL_TERCEROS;
	PROCEDURE MIGRACION_GENERAL_TERCEROS_M;
END MIG_TERCERO_EG;
--
CREATE OR REPLACE PACKAGE BODY MIGRA.MIG_TERCERO_EG
AS
	PROCEDURE GENERA_TABLAS_EQ_TERCEROS
	IS
		CURSOR CUR_HJPF01
		IS
		SELECT * FROM HJPF01;
		--
		CURSOR CUR_HJPF205
		IS
		SELECT
			RAMO,POLIZA,HJPF205.CCLI1,HJPF205.CCLI2,"USER",FECUSE,TIMUSE,NOMCLI,
			DIRCLI,TELCL1,TELCL2,TELCL3,SEXCLI
		FROM HJPF205,MCPF01
		WHERE HJPF205.CCLI1 = MCPF01.CCLI1(+)
		AND HJPF205.CCLI2 = MCPF01.CCLI2(+);
		--
		CURSOR CUR_FNPF01
		IS
		SELECT * FROM FNPF01;
		--
		CURSOR CUR_ORDENE
		IS
		SELECT * FROM ORDENE;
		--
		CURSOR CUR_ORPF06
		IS
		SELECT
			NMROPA,ORPF06.CPLANI,CODPTO,NOMOPA,TIPIDE,RIF,MOTOPA,MTOEXT,ORPF06.TIPMON,ORPF06.TIPCAM,CONCE1,
			CONCE2,CONCE3,CONCE4,DIAOPA,MESOPA,ANOOPA,STSOPA,TIPOPA,ISLR,GARDIA,ORPF06.ANOEMI,ORPF06.CORORD,
			DIAVEN,MESVEN,ANOVEN,ISLREX,ANOCNT,MESCNT,DIACNT,NCOMPR,NMRJOB,"USER",WKSUSE,CPLAEM,CODPEM,IVAOP
		FROM ORPF06,SIPF05
		WHERE ORPF06.ANOEMI > NVL (2005,UID)
		AND ORPF06.STSOPA = 'C'
		AND ORPF06.MOTOPA > 0
		AND ORPF06.CORORD > 0
		AND ORPF06.NMROPA > 0
		AND ORPF06.ANOOPA > 0
		AND ORPF06.ANOEMI = SIPF05.ANOEMI
		AND ORPF06.CORORD = SIPF05.CORORD
		AND SIPF05.STSBEN <> 'A'
		AND SIPF05.TIPOPG <> 'R';
		--
		CURSOR CUR_CLPF07
		IS
		SELECT
			CLPF07.RAMO,CLPF07.POLIZA,CLPF07.CERVEH,CLPF07.ENSAMB,CLPF07.REGULA,CLPF07.TIPO,CLPF07.CILIND,CLPF07.CODMOD,
			CLPF07.CODTIP,CLPF07.ANOVEH,CLPF07.USO,CLPF07.TIEMPO,CLPF07.DESTIN,CLPF07.URBANO,CLPF07.COBASI,CLPF07.CANPAS,
			CLPF07.CARGA,CLPF07.NUMPLA,CLPF07.SERCAR,CLPF07.SERMOT,CLPF07.COLOR,CLPF07.GRALIC,CLPF07.ANOEXP,CLPF07.CLARCV,
			CLPF07.CLACCO,CLPF07.DEDUCI,CLPF07.RECARG,CLPF07.DCTORC,CLPF07.REMOLQ,CLPF07.TONELA,CLPF07.APACON,CLPF07.APAPAS,
			CLPF07.APAAYU,CLPF07.COLASE,CLPF07.DIAING,CLPF07.MESING,CLPF07.ANOING,CLPF07.DIARET,CLPF07.MESRET,CLPF07.ANORET,
			CLPF07.FECMOD,CLPF07.CEDBEN,CLPF07.DIRDE,CLPF07.SUMRCV,CLPF07.SUMCAS,CLPF07.PRRCAP,CLPF07.PRRPRO,CLPF07.PROCAP,
			CLPF07.PROPRO,CLPF07.PRCCAP,CLPF07.PRCPRO,CLPF07.ACTRET,CLPF07.CONDUC,CLPF07.AYUDAN,CLPF07.SACHAS,CLPF07.SAPLAT,
			CLPF07.FECADQ,CLPF07.RECRCV,CLPF07.DESRCV,CLPF07.RECCAS,CLPF07.DESCAS,CLPF07.DEFEN,CLPF07.EXCESO,CLPF07.CODCOL,
			CLPF07.NUMOFI,CLPF07.VALVEH,CLPF07.VEHIMP,CLPF07.SUMAPO,CLPF07.SUMAVI,CLPF07.PRVCAP,CLPF07.PRVPRO,CLPF07.CODAN1,
			HJPF01.DIRCB1,HJPF01.ZONCOB,HJPF01.TELEF,HJPF01.DIRRG1,HJPF01.SEXO,HJPF01.DIANAC,HJPF01.MESNAC,HJPF01.ANONAC
		FROM CLPF07,HJPF01
		WHERE CLPF07.RAMO = HJPF01.RAMO(+)
		AND CLPF07.POLIZA = HJPF01.POLIZA(+);
		--
		CURSOR CUR_HJPF06
		IS
		SELECT
			HJPF06.RAMO,HJPF06.POLIZA,HJPF06.STSREC,NUMREC,COFAAM,CODBEN,NOMBEN,CEDBEN,EDAD,
			NVL (HJPF01.DIANAC,0) DIANAC,NVL (HJPF01.MESNAC,0) MESNAC,NVL (HJPF01.ANONAC,0) ANONAC,
			DIAING,MESING,ANOING,DIARET,MESRET,ANORET,CODPAR,HJPF06.PORCTL,HJPF01.SEXO SEXO,HJPF01.DIRCB1 DIREC
		FROM HJPF06,HJPF01
		WHERE HJPF06.RAMO = HJPF01.RAMO(+)
		AND HJPF06.POLIZA = HJPF01.POLIZA(+);
	BEGIN	
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_HJPF01';
		--
		FOR I IN CUR_HJPF01
		LOOP
			INSERT INTO EQ_HJPF01 (
				RAMO,POLIZA,STSREC,STSFAC,STSEDO,STSX,STSY,STSZ,TIPPRO,PORCTL,PORCTI,CODPRD,DIACOM,MESCOM,ANOCOM,DIADES,MESDES,
				ANODES,DIAHAS,MESHAS,ANOHAS,DIAANU,MESANU,ANOANU,TOTSFN,TOTPFN,FORPAG,COMPAN,PLANU,PLAND,STSANU,NROSIN,TMTOSI,
				NOMASE,CEDREG,DIRCB1,SCBIPO,ZONCOB,TELEF,EDADAS,DIANAC,MESNAC,ANONAC,SEXO,PROF,EDOCIV,DIRRG1,SRIIPO,CEDORI,CSUCRI,
				MANZAN,ACREED,CCLI1,CCLI2,CCLI3,CCLI4,CCLI5,CCLI6,CCLI7,CCLI8,CODCOA,POLCOA,CPLANI,TOTSFE,TOTPFE,CDTCBR,BANDERA
			)
			VALUES (
				I.RAMO,I.POLIZA,I.STSREC,I.STSFAC,I.STSEDO,I.STSX,I.STSY,I.STSZ,I.TIPPRO,I.PORCTL,I.PORCTI,I.CODPRD,I.DIACOM,I.MESCOM,
				I.ANOCOM,I.DIADES,I.MESDES,I.ANODES,I.DIAHAS,I.MESHAS,I.ANOHAS,I.DIAANU,I.MESANU,I.ANOANU,I.TOTSFN,I.TOTPFN,I.FORPAG,
				I.COMPAN,I.PLANU,I.PLAND,I.STSANU,I.NROSIN,I.TMTOSI,I.NOMASE,I.CEDREG,I.DIRCB1,I.SCBIPO,I.ZONCOB,I.TELEF,I.EDADAS,
				I.DIANAC,I.MESNAC,I.ANONAC,I.SEXO,I.PROF,I.EDOCIV,I.DIRRG1,I.SRIIPO,I.CEDORI,I.CSUCRI,I.MANZAN,I.ACREED,I.CCLI1,I.CCLI2,
				I.CCLI3,I.CCLI4,I.CCLI5,I.CCLI6,I.CCLI7,I.CCLI8,I.CODCOA,I.POLCOA,I.CPLANI,I.TOTSFE,I.TOTPFE,I.CDTCBR,I.BANDERA
			);
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_HJPF01
		SET TIPOID = PM.BUSQUEDA_NACION (CCLI1),NUMID = CCLI2;
		COMMIT;
		--
		UPDATE EQ_HJPF01
		SET DVID = (
			CASE
				WHEN TIPOID IN ('J','G') THEN ACSEL.PR_TERCERO.GENERA_DVID@CERT (TIPOID,NUMID)
				ELSE '0'
			END
		)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL;
		COMMIT;
		--
		UPDATE EQ_HJPF01
		SET CODCLI = PM.GENERA_CODCLI (TIPOID,NUMID,DVID),
			INDNACIONAL = PM.BUSQUEDA_INDNACIONAL (TIPOID)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL
		AND TRIM (DVID) IS NOT NULL;
		COMMIT;
		--
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_HJPF205';
		--
		FOR I IN CUR_HJPF205
		LOOP
			INSERT INTO EQ_HJPF205 (
				RAMO,POLIZA,CCLI1,CCLI2,"USER",FECUSE,TIMUSE,NOMTER,DIREC,TELEF1,TELEF2,TELEF3,SEXO
			)
			VALUES (
				I.RAMO,I.POLIZA,I.CCLI1,I.CCLI2,I."USER",I.FECUSE,I.TIMUSE,I.NOMCLI,I.DIRCLI,I.TELCL1,I.TELCL2,I.TELCL3,I.SEXCLI
			);
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_HJPF205
		SET TIPOID = PM.BUSQUEDA_NACION (CCLI1),NUMID = CCLI2;
		COMMIT;
		--
		UPDATE EQ_HJPF205
		SET DVID = (
			CASE
				WHEN TIPOID IN ('J','G') THEN ACSEL.PR_TERCERO.GENERA_DVID@CERT (TIPOID,NUMID)
				ELSE '0'
			END
		)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL;
		COMMIT;
		--
		UPDATE EQ_HJPF205
		SET CODCLI = PM.GENERA_CODCLI (TIPOID,NUMID,DVID),
			INDNACIONAL = PM.BUSQUEDA_INDNACIONAL (TIPOID)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL
		AND TRIM (DVID) IS NOT NULL;
		COMMIT;
		--
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_FNPF01';
		--
		FOR I IN CUR_FNPF01
		LOOP
			INSERT INTO EQ_FNPF01 (
				NOMAF,IDENT,CJ,FECRM,NUMRM,TOMRM,CEDULA,DIRAF,CIUAF,TELAF,SALFIA,CCLI1,CCLI2,CCLI3,
				CCLI4,CCLI5,CCLI6,CCLI7,CCLI8,FOLIO1,FOLIO2,FECRMM,NUMRMM,TOMRMM,FOLI1M,FOLI2M,NOMLAA
			)
			VALUES (
				I.NOMAF,I.IDENT,I.CJ,I.FECRM,I.NUMRM,I.TOMRM,I.CEDULA,I.DIRAF,I.CIUAF,I.TELAF,I.SALFIA,I.CCLI1,I.CCLI2,I.CCLI3,
				I.CCLI4,I.CCLI5,I.CCLI6,I.CCLI7,I.CCLI8,I.FOLIO1,I.FOLIO2,I.FECRMM,I.NUMRMM,I.TOMRMM,I.FOLI1M,I.FOLI2M,I.NOMLAA
			);
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_FNPF01
		SET TIPOID = 'J',
			NUMID = CEDULA
		WHERE CEDULA > 299999999
		AND CEDULA < 400000000;
		COMMIT;
		--
		UPDATE EQ_FNPF01
		SET TIPOID = 'V',
			NUMID = CEDULA
		WHERE CEDULA >= 999
		AND CEDULA < 80000000
		AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_FNPF01
		SET TIPOID = 'E',
			NUMID = CEDULA
		WHERE CEDULA >= 80000000
		AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_FNPF01
		SET DVID = (
			CASE
				WHEN TIPOID IN ('J','G') THEN ACSEL.PR_TERCERO.GENERA_DVID@CERT (TIPOID,NUMID)
				ELSE '0'
			END
		)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL;
		COMMIT;
		--
		UPDATE EQ_FNPF01
		SET CODCLI = PM.GENERA_CODCLI (TIPOID,NUMID,DVID),
			INDNACIONAL = PM.BUSQUEDA_INDNACIONAL (TIPOID)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL
		AND TRIM (DVID) IS NOT NULL;
		COMMIT;
		--
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_ORDENE';
		--
		FOR I IN CUR_ORDENE
		LOOP
			INSERT INTO EQ_ORDENE (
				CORORD,CPLANI,CODPTO,NOMORD,TIPIDE,RIF,MONTO,MTOEXT,TIPMON,TIPCAM,CONCE1,CONCE2,CONCE3,CONCE4,DIAEMI,
				MESEMI,ANOEMI,STSIMD,TIPORD,CODDOC,ISLR,GARDIA,ANODOC,NMRDOC,DIAVEN,MESVEN,ANOVEN,ISLREX,ANOOPA,NMROPA,
				NUOBEX,CODCLI,SALDO,SALEXT,ANOCNT,MESCNT,DIACNT,NCOMPR,"USER",WKSUSE,MONTIM,MONTIE,IVA,STSATE,NUMMEM,STSIMP
			)
			VALUES (
				I.CORORD,I.CPLANI,I.CODPTO,I.NOMORD,I.TIPIDE,I.RIF,I.MONTO,I.MTOEXT,I.TIPMON,I.TIPCAM,I.CONCE1,I.CONCE2,
				I.CONCE3,I.CONCE4,I.DIAEMI,I.MESEMI,I.ANOEMI,I.STSIMD,I.TIPORD,I.CODDOC,I.ISLR,I.GARDIA,I.ANODOC,I.NMRDOC,
				I.DIAVEN,I.MESVEN,I.ANOVEN,I.ISLREX,I.ANOOPA,I.NMROPA,I.NUOBEX,I.CODCLI,I.SALDO,I.SALEXT,I.ANOCNT,I.MESCNT,
				I.DIACNT,I.NCOMPR,I."USER",I.WKSUSE,I.MONTIM,I.MONTIE,I.IVA,I.STSATE,I.NUMMEM,I.STSIMP
			);
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_ORDENE
		SET TIPOID = 'J',
			NUMID = RIF
		WHERE RIF > 299999999
		AND RIF < 400000000;
		COMMIT;
		--
		UPDATE EQ_ORDENE
		SET TIPOID = 'V',NUMID = RIF
		WHERE RIF >= 999
		AND RIF < 80000000
		AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_ORDENE
		SET TIPOID = 'E',NUMID = RIF
		WHERE RIF >= 80000000
		AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_ORDENE
		SET DVID = (
			CASE
				WHEN TIPOID IN ('J','G') THEN ACSEL.PR_TERCERO.GENERA_DVID@CERT (TIPOID,NUMID)
				ELSE '0'
			END
		)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL;
		COMMIT;
		--
		UPDATE EQ_ORDENE
		SET CODCLI = PM.GENERA_CODCLI (TIPOID,NUMID,DVID),
			INDNACIONAL = PM.BUSQUEDA_INDNACIONAL (TIPOID)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL
		AND TRIM (DVID) IS NOT NULL;
		COMMIT;
		--
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_ORPF06';
		--
		FOR I IN CUR_ORPF06
		LOOP
			INSERT INTO EQ_ORPF06 (
				NMROPA,CPLANI,CODPTO,NOMOPA,TIPIDE,RIF,MOTOPA,MTOEXT,TIPMON,TIPCAM,CONCE1,CONCE2,CONCE3,
				CONCE4,DIAOPA,MESOPA,ANOOPA,STSOPA,TIPOPA,ISLR,GARDIA,ANOEMI,CORORD,DIAVEN,MESVEN,ANOVEN,
				ISLREX,ANOCNT,MESCNT,DIACNT,NCOMPR,NMRJOB,"USER",WKSUSE,CPLAEM,CODPEM,IVAOP
			)
			VALUES (
				I.NMROPA,I.CPLANI,I.CODPTO,I.NOMOPA,I.TIPIDE,I.RIF,I.MOTOPA,I.MTOEXT,I.TIPMON,I.TIPCAM,I.CONCE1,I.CONCE2,
				I.CONCE3,I.CONCE4,I.DIAOPA,I.MESOPA,I.ANOOPA,I.STSOPA,I.TIPOPA,I.ISLR,I.GARDIA,I.ANOEMI,I.CORORD,I.DIAVEN,
				I.MESVEN,I.ANOVEN,I.ISLREX,I.ANOCNT,I.MESCNT,I.DIACNT,I.NCOMPR,I.NMRJOB,I."USER",I.WKSUSE,I.CPLAEM,I.CODPEM,I.IVAOP
			);
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_ORPF06
		SET TIPOID = 'J',
			NUMID = RIF
		WHERE RIF > 299999999 AND RIF < 400000000;
		COMMIT;
		--
		UPDATE EQ_ORPF06
		SET TIPOID = 'V',
			NUMID = RIF
		WHERE RIF >= 999 AND RIF < 80000000
		AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_ORPF06
		SET TIPOID = 'E',
			NUMID = RIF
		WHERE RIF >= 80000000 AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_ORPF06
		SET DVID = (
			CASE
				WHEN TIPOID IN ('J','G') THEN ACSEL.PR_TERCERO.GENERA_DVID@CERT (TIPOID,NUMID)
				ELSE '0'
			END
		)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL;
		COMMIT;
		--
		UPDATE EQ_ORPF06
		SET CODCLI = PM.GENERA_CODCLI (TIPOID,NUMID,DVID),
			INDNACIONAL = PM.BUSQUEDA_INDNACIONAL (TIPOID)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL
		AND TRIM (DVID) IS NOT NULL;
		COMMIT;
		--
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_CLPF07';
		--
		FOR I IN CUR_CLPF07
		LOOP
			INSERT INTO EQ_CLPF07 (
				RAMO,POLIZA,CERVEH,ENSAMB,REGULA,TIPO,CILIND,CODMOD,CODTIP,ANOVEH,USO,TIEMPO,DESTIN,URBANO,COBASI,CANPAS,CARGA,
				NUMPLA,SERCAR,SERMOT,COLOR,GRALIC,ANOEXP,CLARCV,CLACCO,DEDUCI,RECARG,DCTORC,REMOLQ,TONELA,APACON,APAPAS,APAAYU,
				COLASE,DIAING,MESING,ANOING,DIARET,MESRET,ANORET,FECMOD,CEDBEN,DIRDE,SUMRCV,SUMCAS,PRRCAP,PRRPRO,PROCAP,PROPRO,
				PRCCAP,PRCPRO,ACTRET,CONDUC,AYUDAN,SACHAS,SAPLAT,FECADQ,RECRCV,DESRCV,RECCAS,DESCAS,DEFEN,EXCESO,CODCOL,NUMOFI,
				VALVEH,VEHIMP,SUMAPO,SUMAVI,PRVCAP,PRVPRO,CODAN1,DIRCB1,ZONCOB,TELEF,DIRRG1,SEXO,DIANAC,MESNAC,ANONAC
			)
			VALUES (
				I.RAMO,I.POLIZA,I.CERVEH,I.ENSAMB,I.REGULA,I.TIPO,I.CILIND,I.CODMOD,I.CODTIP,I.ANOVEH,I.USO,I.TIEMPO,I.DESTIN,I.URBANO,
				I.COBASI,I.CANPAS,I.CARGA,I.NUMPLA,I.SERCAR,I.SERMOT,I.COLOR,I.GRALIC,I.ANOEXP,I.CLARCV,I.CLACCO,I.DEDUCI,I.RECARG,I.DCTORC,
				I.REMOLQ,I.TONELA,I.APACON,I.APAPAS,I.APAAYU,I.COLASE,I.DIAING,I.MESING,I.ANOING,I.DIARET,I.MESRET,I.ANORET,I.FECMOD,I.CEDBEN,
				I.DIRDE,I.SUMRCV,I.SUMCAS,I.PRRCAP,I.PRRPRO,I.PROCAP,I.PROPRO,I.PRCCAP,I.PRCPRO,I.ACTRET,I.CONDUC,I.AYUDAN,I.SACHAS,I.SAPLAT,
				I.FECADQ,I.RECRCV,I.DESRCV,I.RECCAS,I.DESCAS,I.DEFEN,I.EXCESO,I.CODCOL,I.NUMOFI,I.VALVEH,I.VEHIMP,I.SUMAPO,I.SUMAVI,I.PRVCAP,
				I.PRVPRO,I.CODAN1,I.DIRCB1,I.ZONCOB,I.TELEF,I.DIRRG1,I.SEXO,I.DIANAC,I.MESNAC,I.ANONAC
			);
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_CLPF07
		SET TIPOID = 'J',
			NUMID = CEDBEN
		WHERE RAMO = 31
		AND CEDBEN > 299999999
		AND CEDBEN < 400000000;
		COMMIT;
		--
		UPDATE EQ_CLPF07
		SET TIPOID = 'V',
			NUMID = CEDBEN
		WHERE CEDBEN >= 999
		AND CEDBEN < 80000000
		AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_CLPF07
		SET TIPOID = 'E',NUMID = CEDBEN
		WHERE CEDBEN >= 80000000 AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_CLPF07
		SET DVID = (
			CASE
				WHEN TIPOID IN ('J','G') THEN ACSEL.PR_TERCERO.GENERA_DVID@CERT (TIPOID,NUMID)
				ELSE '0'
			END
		)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL;
		COMMIT;
		--
		UPDATE EQ_CLPF07
		SET CODCLI = PM.GENERA_CODCLI (TIPOID,NUMID,DVID),
			INDNACIONAL = PM.BUSQUEDA_INDNACIONAL (TIPOID)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL
		AND TRIM (DVID) IS NOT NULL;
		COMMIT;
		--
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_HJPF06';
		--
		FOR I IN CUR_HJPF06
		LOOP
			INSERT INTO EQ_HJPF06 (
				RAMO,POLIZA,STSREC,NUMREC,COFAAM,CODBEN,NOMBEN,CEDBEN,EDAD,DIANAC,MESNAC,
				ANONAC,DIAING,MESING,ANOING,DIARET,MESRET,ANORET,CODPAR,PORCTL,SEXO,DIREC
			)
			VALUES (
				I.RAMO,I.POLIZA,I.STSREC,I.NUMREC,I.COFAAM,I.CODBEN,I.NOMBEN,I.CEDBEN,I.EDAD,I.DIANAC,I.MESNAC,
				I.ANONAC,I.DIAING,I.MESING,I.ANOING,I.DIARET,I.MESRET,I.ANORET,I.CODPAR,I.PORCTL,I.SEXO,I.DIREC
			);
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_HJPF06
		SET TIPOID = 'J',
			NUMID = CEDBEN
		WHERE CEDBEN > 299999999
		AND CEDBEN < 400000000;
		COMMIT;
		--
		UPDATE EQ_HJPF06
		SET TIPOID = 'V',
			NUMID = CEDBEN
		WHERE CEDBEN >= 999
		AND CEDBEN < 80000000
		AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_HJPF06
		SET TIPOID = 'E',
			NUMID = CEDBEN
		WHERE CEDBEN >= 80000000
		AND NVL (NUMID,0) = 0;
		COMMIT;
		--
		UPDATE EQ_HJPF06
		SET DVID = (
			CASE
				WHEN TIPOID IN ('J','G') THEN ACSEL.PR_TERCERO.GENERA_DVID@CERT (TIPOID,NUMID)
				ELSE '0'
			END
		)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL;
		COMMIT;
		--
		UPDATE EQ_HJPF06
		SET CODCLI = PM.GENERA_CODCLI (TIPOID,NUMID,DVID),
			INDNACIONAL = PM.BUSQUEDA_INDNACIONAL (TIPOID)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL
		AND TRIM (DVID) IS NOT NULL;
		COMMIT;
	END GENERA_TABLAS_EQ_TERCEROS;
	--
	PROCEDURE GENERA_TABLAS_EQ_TERCEROS_M
	IS
		CED_MED1	EQ_HJPF71.NUMID%TYPE;
		CED_MED2	EQ_HJPF71.NUMID%TYPE;
		BANDERA		NUMBER (1) := 0;
		V_DVID 		NUMBER (3) := 0;
		N_CED		NUMBER (14);
		--
		CURSOR CUR_HJPF71
		IS
		SELECT * FROM HJPF71;
		--
		CURSOR CUR_MENORES
		IS
		SELECT TIPOID,NUMID,DVID,COFAAM
		FROM EQ_MENORES
		ORDER BY TIPOID,NUMID,DVID,COFAAM;
		--
		CURSOR CUR_CLPF05_NUMID
		IS
		SELECT TIPOID,NUMID,COFAAM
		FROM EQ_CLPF05_FAM
		WHERE RAMO IN (24,02) AND TIPOID = 'M'
		GROUP BY TIPOID,NUMID,COFAAM
		ORDER BY TIPOID,NUMID;
		--
		CURSOR CUR_CLPF05
		IS
		SELECT
			TIPOPR,CLPF05.RAMO,CLPF05.POLIZA,NUMCER,COFAAM,COLASE,NACION,CEDCOL,NVL (HJPF01.DIANAC,0) DIANAC,
			NVL (HJPF01.MESNAC,0) MESNAC,NVL (HJPF01.ANONAC,0) ANONAC,EDAACT,EDOCOL,DIAING,MESING,ANOING,CODPLA,
			SUELDO,TELASE,CLACOL,PRICAP,PRIPRO,DIARET,MESRET,ANORET,ACTRET,CLASCO,CODCOM,SEXBEN,ZURDO,CLPF05.PROF,
			FECMOD,FECSOL,ZONEFT,TIPRIE,MATERN,FTORCG,CORRE,STSPRE,STSPLA,CODPAR,INDEXC
		FROM CLPF05,HJPF01
		WHERE CLPF05.RAMO = HJPF01.RAMO(+)
		AND CLPF05.POLIZA = HJPF01.POLIZA(+)
		GROUP BY
			TIPOPR,CLPF05.RAMO,CLPF05.POLIZA,NUMCER,COFAAM,COLASE,NACION,CEDCOL,HJPF01.DIANAC,HJPF01.MESNAC,HJPF01.ANONAC,
			EDAACT,EDOCOL,DIAING,MESING,ANOING,CODPLA,SUELDO,TELASE,CLACOL,PRICAP,PRIPRO,DIARET,MESRET,ANORET,ACTRET,CLASCO,
			CODCOM,SEXBEN,ZURDO,CLPF05.PROF,FECMOD,FECSOL,ZONEFT,TIPRIE,MATERN,FTORCG,CORRE,STSPRE,STSPLA,CODPAR,INDEXC;
		--
		CURSOR CUR_MENORES_1
		IS
		SELECT RAMO,POLIZA,NUMCER,COFAAM
		FROM EQ_CLPF05_FAM
		WHERE CEDCOL < 999
		AND NUMID IS NULL
		GROUP BY RAMO,POLIZA,NUMCER,COFAAM
		ORDER BY RAMO,POLIZA,NUMCER,COFAAM;
		--
		CURSOR CUR_MENORES_2
		IS
		SELECT ROWID,CEDCOL
		FROM EQ_CLPF05_FAM
		WHERE CEDCOL >= 100000000
		AND NUMID IS NULL;
		--
		CURSOR CUR_MENORES_3
		IS
		SELECT ROWID,CEDCOL
		FROM EQ_CLPF05_FAM
		WHERE CEDCOL >= 999
		AND CEDCOL < 80000000
		AND TRIM (NACION) IS NULL
		AND NUMID IS NULL;
		--
		CURSOR CUR_MENORES_4
		IS
		SELECT ROWID,CEDCOL
		FROM EQ_CLPF05_FAM
		WHERE CEDCOL >= 80000000
		AND TRIM (NACION) IS NULL
		AND NUMID IS NULL;
		--
		P_NUMERO	NUMBER := 1;
		P_NUMID_AN	EQ_CLPF05_FAM.NUMID%TYPE := 0;
		P_NUMID_AC	EQ_CLPF05_FAM.NUMID%TYPE;
		P_DVID		EQ_CLPF05_FAM.DVID%TYPE;
	BEGIN
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_HJPF71';
		--
		FOR I IN CUR_HJPF71
		LOOP
			INSERT INTO EQ_HJPF71 (
				RAMO,POLIZA,STSREC,NUMREC,COFAAM,NOMBEN,CEDBEN,EDAD,DIANAC,MESNAC,ANONAC,DIAING,MESING,ANOING,DIARET,
				MESRET,ANORET,CODPAR,MONMAX,PRMEXB,PRMBSB,PRMGAB,PRMOTB,PRMEXE,PRMBSE,PRMGAE,PRMOTE,STSPRE,STSPLA,TASA
			)
			VALUES (
				I.RAMO,I.POLIZA,I.STSREC,I.NUMREC,I.COFAAM,I.NOMBEN,I.CEDBEN,I.EDAD,I.DIANAC,I.MESNAC,
				I.ANONAC,I.DIAING,I.MESING,I.ANOING,I.DIARET,I.MESRET,I.ANORET,I.CODPAR,I.MONMAX,I.PRMEXB,
				I.PRMBSB,I.PRMGAB,I.PRMOTB,I.PRMEXE,I.PRMBSE,I.PRMGAE,I.PRMOTE,I.STSPRE,I.STSPLA,I.TASA
			);
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_HJPF71
		SET NTIPO = 1
		WHERE ANONAC > 0
		AND COFAAM <> 99
		AND COFAAM > 0
		AND EDAD < 8;
		COMMIT;
		--
		UPDATE EQ_HJPF71
		SET NTIPO = 2
		WHERE NTIPO IS NULL
		AND ANONAC > 0
		AND COFAAM <> 99
		AND COFAAM > 0
		AND CEDBEN < 100;
		COMMIT;
		--
		UPDATE EQ_HJPF71
		SET NTIPO = 2
		WHERE NTIPO IS NULL
		AND ANONAC > 0
		AND COFAAM <> 99
		AND COFAAM > 0
		AND CEDBEN > 99999999;
		COMMIT;
		--
		UPDATE EQ_HJPF71
		SET TIPOID = 'V'
		WHERE ANONAC > 0
		AND COFAAM <> 99
		AND COFAAM > 0
		AND CEDBEN > 99
		AND CEDBEN < 80000000
		AND NTIPO IS NULL;
		COMMIT;
		--
		UPDATE EQ_HJPF71
		SET TIPOID = 'E'
		WHERE ANONAC > 0
		AND COFAAM <> 99
		AND COFAAM > 0
		AND CEDBEN >= 80000000
		AND CEDBEN < 100000000
		AND NTIPO IS NULL;
		COMMIT;
		--
		UPDATE EQ_HJPF71 AA
		SET TIPOID = 'M',
			NUMID = (
				SELECT MAX (BB.CCLI2)
				FROM HJPF01 BB
				WHERE AA.RAMO = BB.RAMO
				AND AA.POLIZA = BB.POLIZA
				AND AA.NTIPO = 1
				GROUP BY RAMO,POLIZA
			)
		WHERE EXISTS (
			SELECT 1 FROM HJPF01 BB
			WHERE AA.RAMO = BB.RAMO
			AND AA.POLIZA = BB.POLIZA
			AND AA.NTIPO = 1
			GROUP BY RAMO,POLIZA
		)
		AND RAMO = 26;
		COMMIT;
		--
		UPDATE EQ_HJPF71 AA
		SET DIRCB1 = (
			SELECT BB.DIRCB1
			FROM HJPF01 BB
			WHERE AA.ANONAC > 0
			AND AA.COFAAM <> 99
			AND AA.COFAAM > 0
			AND BB.RAMO = AA.RAMO
			AND BB.POLIZA = AA.POLIZA
		),
		ZONCOB = (
			SELECT BB.ZONCOB
			FROM HJPF01 BB
			WHERE AA.ANONAC > 0
			AND AA.COFAAM <> 99
			AND AA.COFAAM > 0
			AND BB.RAMO = AA.RAMO
			AND BB.POLIZA = AA.POLIZA
		),
		TELEF = (
			SELECT BB.TELEF
			FROM HJPF01 BB
			WHERE AA.ANONAC > 0
			AND AA.COFAAM <> 99
			AND AA.COFAAM > 0
			AND BB.RAMO = AA.RAMO
			AND BB.POLIZA = AA.POLIZA
		),
		DIRRG1 = (
			SELECT BB.DIRRG1
			FROM HJPF01 BB
			WHERE AA.ANONAC > 0
			AND AA.COFAAM <> 99
			AND AA.COFAAM > 0
			AND BB.RAMO = AA.RAMO
			AND BB.POLIZA = AA.POLIZA
		)
		WHERE EXISTS (
			SELECT 1 FROM HJPF01 BB
			WHERE AA.ANONAC > 0
			AND AA.COFAAM <> 99
			AND AA.COFAAM > 0
			AND BB.RAMO = AA.RAMO
			AND BB.POLIZA = AA.POLIZA
		);
		COMMIT;
		--
		UPDATE EQ_HJPF71
		SET NUMID = CEDBEN
		WHERE ANONAC > 0
		AND COFAAM <> 99
		AND COFAAM > 0
		AND NTIPO = 0;
		COMMIT;
		--
		UPDATE EQ_HJPF71
		SET DVID = (
			CASE
				WHEN TIPOID IN ('J','G') THEN ACSEL.PR_TERCERO.GENERA_DVID@CERT (TIPOID,NUMID)
				ELSE '0'
			END
		)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL;
		COMMIT;
		--
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_MENORES';
		--
		INSERT INTO EQ_MENORES (TIPOID,NUMID,DVID,COFAAM)
		SELECT TIPOID,NUMID,'0' DVID,COFAAM
		FROM EQ_HJPF71
		WHERE ANONAC > 0
		AND COFAAM <> 99
		AND COFAAM > 0
		AND NTIPO = 1
		AND RAMO = 26
		GROUP BY TIPOID,NUMID,0,COFAAM;
		COMMIT;
		--
		FOR X IN CUR_MENORES
		LOOP
			IF BANDERA = 0 THEN
				CED_MED2 := X.NUMID;
			END IF;
			--
			CED_MED1 := X.NUMID;
			--
			IF CED_MED1 <> CED_MED2 OR BANDERA = 0 THEN
				V_DVID := 1;
				BANDERA := 1;
				CED_MED2 := X.NUMID;
			ELSE
				IF V_DVID >= 9 THEN
					V_DVID := 9;
				ELSE
					V_DVID := V_DVID + 1;
				END IF;
			END IF;
			--
			UPDATE EQ_MENORES EQM
			SET DVID = V_DVID
			WHERE EQM.TIPOID = X.TIPOID
			AND EQM.NUMID = X.NUMID
			AND EQM.COFAAM = X.COFAAM;
			COMMIT;
		END LOOP;
		--
		FOR X IN CUR_MENORES
		LOOP
			UPDATE EQ_HJPF71 EQH
			SET TIPOID = 'M',
				DVID = X.DVID
			WHERE EQH.TIPOID = X.TIPOID
			AND EQH.NUMID = X.NUMID
			AND EQH.COFAAM = X.COFAAM
			AND EQH.NTIPO = 1
			AND EQH.ANONAC > 0
			AND EQH.COFAAM <> 99
			AND EQH.COFAAM > 0;
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_HJPF71
		SET CODCLI = PM.GENERA_CODCLI (TIPOID,NUMID,DVID),
			INDNACIONAL = PM.BUSQUEDA_INDNACIONAL (TIPOID)
		WHERE ANONAC > 0
		AND COFAAM <> 99
		AND COFAAM > 0
		AND TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL
		AND TRIM (DVID) IS NOT NULL;
		COMMIT;
		--
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_CLPF05_FAM';
		--
		FOR I IN CUR_CLPF05
		LOOP
			INSERT INTO EQ_CLPF05_FAM (
				TIPOPR,RAMO,POLIZA,NUMCER,COFAAM,COLASE,NACION,CEDCOL,DIANAC,MESNAC,ANONAC,EDAACT,EDOCOL,DIAING,
				MESING,ANOING,CODPLA,SUELDO,TELASE,CLACOL,PRICAP,PRIPRO,DIARET,MESRET,ANORET,ACTRET,CLASCO,CODCOM,
				SEXBEN,ZURDO,PROF,FECMOD,FECSOL,ZONEFT,TIPRIE,MATERN,FTORCG,CORRE,STSPRE,STSPLA,CODPAR,INDEXC
			)
			VALUES (
				I.TIPOPR,I.RAMO,I.POLIZA,I.NUMCER,I.COFAAM,I.COLASE,I.NACION,I.CEDCOL,I.DIANAC,I.MESNAC,I.ANONAC,
				I.EDAACT,I.EDOCOL,I.DIAING,I.MESING,I.ANOING,I.CODPLA,I.SUELDO,I.TELASE,I.CLACOL,I.PRICAP,I.PRIPRO,
				I.DIARET,I.MESRET,I.ANORET,I.ACTRET,I.CLASCO,I.CODCOM,I.SEXBEN,I.ZURDO,I.PROF,I.FECMOD,I.FECSOL,
				I.ZONEFT,I.TIPRIE,I.MATERN,I.FTORCG,I.CORRE,I.STSPRE,I.STSPLA,I.CODPAR,I.INDEXC
			);
			COMMIT;
		END LOOP;
		--
		DELETE FROM EQ_CLPF05_FAM
		WHERE COFAAM <> 0 AND RAMO = 27;
		COMMIT;
		--
		UPDATE EQ_CLPF05_FAM
		SET TIPOID = 'M',
			NUMID = NUMCER
		WHERE EDAACT < 8 AND RAMO = 26;
		COMMIT;
		--
		UPDATE EQ_CLPF05_FAM
		SET TIPOID = PM.BUSQUEDA_NACION (NACION),
			NUMID = CEDCOL
		WHERE RAMO <> 27
		AND COFAAM = 0
		AND NUMID IS NULL;
		COMMIT;
		--
		UPDATE EQ_CLPF05_FAM
		SET TIPOID = PM.BUSQUEDA_NACION (NACION),NUMID = CEDCOL
		WHERE RAMO = 27
		AND COFAAM = 0
		AND CEDCOL < 100000000
		AND NUMID IS NULL;
		COMMIT;
		--
		FOR I IN CUR_MENORES_1
		LOOP
			UPDATE EQ_CLPF05_FAM
			SET TIPOID = 'N',
				NUMID = (
					SELECT COUNT (*) + P_NUMERO
					FROM acsel.tercero@cert
					WHERE tipoid = 'N'
				),
				DVID = '7'
			WHERE RAMO = I.RAMO
			AND POLIZA = I.POLIZA
			AND NUMCER = I.NUMCER
			AND COFAAM = I.COFAAM;
			COMMIT;
			--
			P_NUMERO := P_NUMERO + 1;
		END LOOP;
		--
		FOR I IN CUR_MENORES_2
		LOOP
			UPDATE EQ_CLPF05_FAM
			SET TIPOID = 'N',
				NUMID = I.CEDCOL
			WHERE ROWID = I.ROWID;
			COMMIT;
		END LOOP;
		--
		FOR I IN CUR_MENORES_3
		LOOP
			UPDATE EQ_CLPF05_FAM
			SET TIPOID = 'V',
				NUMID = I.CEDCOL
			WHERE ROWID = I.ROWID;
			COMMIT;
		END LOOP;
		--
		FOR I IN CUR_MENORES_4
		LOOP
			UPDATE EQ_CLPF05_FAM
			SET TIPOID = 'E',
				NUMID = I.CEDCOL
			WHERE ROWID = I.ROWID;
			COMMIT;
		END LOOP;
		--
		UPDATE EQ_CLPF05_FAM AA
		SET AA.DIAORI = (
			SELECT MAX (BB.DIAORI)
			FROM CLPF25 BB
			WHERE AA.RAMO = BB.RAMO
			AND AA.POLIZA = BB.POLIZA
			AND AA.NUMCER = BB.NUMCER
			AND AA.COFAAM = BB.COFAAM
			AND AA.CORRE = BB.CORRE
			GROUP BY AA.RAMO,AA.POLIZA,AA.NUMCER,AA.COFAAM,AA.CORRE
		),
		AA.MESORI = (
			SELECT MAX (BB.MESORI)
			FROM CLPF25 BB
			WHERE AA.RAMO = BB.RAMO
			AND AA.POLIZA = BB.POLIZA
			AND AA.NUMCER = BB.NUMCER
			AND AA.COFAAM = BB.COFAAM
			AND AA.CORRE = BB.CORRE
			GROUP BY AA.RAMO,AA.POLIZA,AA.NUMCER,AA.COFAAM,AA.CORRE
		),
		AA.ANOORI = (
			SELECT MAX (BB.ANOORI)
			FROM CLPF25 BB
			WHERE AA.RAMO = BB.RAMO
			AND AA.POLIZA = BB.POLIZA
			AND AA.NUMCER = BB.NUMCER
			AND AA.COFAAM = BB.COFAAM
			AND AA.CORRE = BB.CORRE
			GROUP BY AA.RAMO,AA.POLIZA,AA.NUMCER,AA.COFAAM,AA.CORRE
		)
		WHERE EXISTS (
			SELECT 1 FROM CLPF25 BB
			WHERE AA.RAMO = BB.RAMO
			AND AA.POLIZA = BB.POLIZA
			AND AA.NUMCER = BB.NUMCER
			AND AA.COFAAM = BB.COFAAM
			AND AA.CORRE = BB.CORRE
		);
		COMMIT;
		--
		UPDATE EQ_CLPF05_FAM
		SET DVID = (
			CASE
				WHEN TIPOID IN ('J','G') THEN ACSEL.PR_TERCERO.GENERA_DVID@CERT (TIPOID,NUMID)
				ELSE '0'
			END
		)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL;
		COMMIT;
		--
		P_NUMID_AN := 0;
		P_DVID := 0;
		--
		FOR X IN CUR_CLPF05_NUMID
		LOOP
			P_NUMID_AC := X.NUMID;
			--
			IF P_NUMID_AC = P_NUMID_AN THEN
				P_DVID := P_DVID + 1;
				--
				UPDATE EQ_CLPF05_FAM
				SET DVID = P_DVID
				WHERE TIPOID = X.TIPOID
				AND NUMID = X.NUMID
				AND COFAAM = X.COFAAM;
				COMMIT;
				--
				P_NUMID_AN := X.NUMID;
			ELSE
				P_DVID := 1;
				--
				UPDATE EQ_CLPF05_FAM
				SET DVID = P_DVID
				WHERE TIPOID = X.TIPOID
				AND NUMID = X.NUMID
				AND COFAAM = X.COFAAM;
				COMMIT;
				--
				P_NUMID_AN := X.NUMID;
			END IF;
		END LOOP;
		--
		UPDATE EQ_CLPF05_FAM
		SET CODCLI = PM.GENERA_CODCLI (TIPOID,NUMID,DVID),
			INDNACIONAL = PM.BUSQUEDA_INDNACIONAL (TIPOID)
		WHERE TRIM (TIPOID) IS NOT NULL
		AND TRIM (NUMID) IS NOT NULL
		AND TRIM (DVID) IS NOT NULL;
		COMMIT;
		--
	END GENERA_TABLAS_EQ_TERCEROS_M;
	--
	PROCEDURE GENERA_EQ_MENORES
	IS
		CURSOR MENORES_EQ
		IS
		SELECT NACION,CEDULA,TIPOID,NUMID,DVID,0 NUMLOGPROCESO,NOMTABLA
		FROM (
			SELECT '0' NACION,CEDBEN CEDULA,'M' TIPOID,NUMID NUMID,DVID DVID,'EQ_HJPF71' NOMTABLA
			FROM (
				WITH
				TITULAR AS (
					SELECT DISTINCT Poliza,cedBen
					FROM EQ_HJPF71
					WHERE Ramo = 26 AND CoFaam IN (0,99)
				),
				FAMILIAR AS (
					SELECT * FROM EQ_HJPF71
					WHERE Ramo = 26
					AND CoFaam NOT IN (0,99)
					AND CedBen LIKE '9%'
				)
				SELECT FAMILIAR.*
				FROM TITULAR,FAMILIAR
				WHERE FAMILIAR.CedBen LIKE '%' || TITULAR.CedBen
				AND TITULAR.CedBen <> FAMILIAR.CedBen
				AND TITULAR.Poliza = FAMILIAR.Poliza
				AND FAMILIAR.CodPar IN (7,8,11,12,13,14,21,22,43,44)
			)
			WHERE TRIM (TIPOID) IS NOT NULL
			UNION ALL
			SELECT NACION NACION,CEDCOL CEDULA,'N' TIPOID,NUMID NUMID,DVID DVID,'EQ_CLPF05_FAM' NOMTABLA
			FROM EQ_CLPF05_FAM CLI
			WHERE Ramo = 27
			AND EXISTS (
				SELECT 'X' FROM HJPF01
				WHERE Ramo = CLI.Ramo
				AND Poliza = CLI.Poliza
				AND Cdtcbr = '71'
			)
		);
	BEGIN
		EXECUTE IMMEDIATE 'TRUNCATE TABLE EQ_MIG_MENORES';
		--
		FOR I IN MENORES_EQ
		LOOP
			INSERT INTO EQ_MIG_MENORES (NACION,CEDULA,TIPOID,NUMID,DVID,NUMLOGPROCESO,NOMTABLA)
			VALUES (I.NACION,I.CEDULA,I.TIPOID,I.NUMID,I.DVID,I.NUMLOGPROCESO,I.NOMTABLA);
			COMMIT;
		END LOOP;
	END GENERA_EQ_MENORES;
	--
	PROCEDURE GENERA_DATA_SIN_EQ
	IS
		CURSOR DATA_SIN_EQ_GENERADA
		IS
		SELECT RAMO,POLIZA,CCLI1,CCLI2,NOMTABLA
		FROM (
			SELECT RAMO,POLIZA,CCLI1,CCLI2,'EQ_HJPF01' NOMTABLA
			FROM EQ_HJPF01
			WHERE TRIM (TIPOID) IS NULL
			OR TRIM (NUMID) IS NULL
			OR TRIM (DVID) IS NULL
			OR TRIM (CODCLI) IS NULL
			OR TRIM (INDNACIONAL) IS NULL
			UNION ALL
			SELECT RAMO,POLIZA,CCLI1,CCLI2,'EQ_HJPF205'
			FROM EQ_HJPF205
			WHERE TRIM (TIPOID) IS NULL
			OR TRIM (NUMID) IS NULL
			OR TRIM (DVID) IS NULL
			OR TRIM (CODCLI) IS NULL
			OR TRIM (INDNACIONAL) IS NULL
			UNION ALL
			SELECT 0,0,CCLI1,CCLI2,'EQ_FNPF01'
			FROM EQ_FNPF01
			WHERE TRIM (TIPOID) IS NULL
			OR TRIM (NUMID) IS NULL
			OR TRIM (DVID) IS NULL
			OR TRIM (CODCLI) IS NULL
			OR TRIM (INDNACIONAL) IS NULL
			UNION ALL
			SELECT 0,0,'0',RIF,'EQ_ORDENE'
			FROM EQ_ORDENE
			WHERE TRIM (TIPOID) IS NULL
			OR TRIM (NUMID) IS NULL
			OR TRIM (DVID) IS NULL
			OR TRIM (CODCLI) IS NULL
			OR TRIM (INDNACIONAL) IS NULL
			UNION ALL
			SELECT 0,0,TIPIDE,RIF,'EQ_ORPF06'
			FROM EQ_ORPF06
			WHERE TRIM (TIPOID) IS NULL
			OR TRIM (NUMID) IS NULL
			OR TRIM (DVID) IS NULL
			OR TRIM (CODCLI) IS NULL
			OR TRIM (INDNACIONAL) IS NULL
			UNION ALL
			SELECT RAMO,POLIZA,'0',CEDBEN,'EQ_CLPF07'
			FROM EQ_CLPF07
			WHERE TRIM (TIPOID) IS NULL
			OR TRIM (NUMID) IS NULL
			OR TRIM (DVID) IS NULL
			OR TRIM (CODCLI) IS NULL
			OR TRIM (INDNACIONAL) IS NULL
			UNION ALL
			SELECT RAMO,POLIZA,'0',CEDBEN,'EQ_HJPF06'
			FROM EQ_HJPF06
			WHERE TRIM (TIPOID) IS NULL
			OR TRIM (NUMID) IS NULL
			OR TRIM (DVID) IS NULL
			OR TRIM (CODCLI) IS NULL
			OR TRIM (INDNACIONAL) IS NULL
			UNION ALL
			SELECT RAMO,POLIZA,'0',CEDBEN,'EQ_HJPF71'
			FROM EQ_HJPF71
			WHERE TRIM (TIPOID) IS NULL
			OR TRIM (NUMID) IS NULL
			OR TRIM (DVID) IS NULL
			OR TRIM (CODCLI) IS NULL
			OR TRIM (INDNACIONAL) IS NULL
			UNION ALL
			SELECT RAMO,POLIZA,NACION,CEDCOL,'EQ_CLPF05_FAM'
			FROM EQ_CLPF05_FAM
			WHERE TRIM (TIPOID) IS NULL
			OR TRIM (NUMID) IS NULL
			OR TRIM (DVID) IS NULL
			OR TRIM (CODCLI) IS NULL
			OR TRIM (INDNACIONAL) IS NULL
		)
		GROUP BY RAMO,POLIZA,CCLI1,CCLI2,NOMTABLA;
	BEGIN
		EXECUTE IMMEDIATE 'TRUNCATE TABLE ERR_MIG_CLIENTE_SIN_EQ';
		--
		FOR I IN DATA_SIN_EQ_GENERADA
		LOOP
			INSERT INTO ERR_MIG_CLIENTE_SIN_EQ
			VALUES (I.RAMO,I.POLIZA,I.CCLI1,I.CCLI2,I.NOMTABLA);
			COMMIT;
		END LOOP;
		--
		EXECUTE IMMEDIATE 'TRUNCATE TABLE ERR_MIG_CLIENTE';
	END GENERA_DATA_SIN_EQ;
	--
	PROCEDURE MIGRACION_GENERAL_TERCEROS
	IS
		--
		V_TIPOID 			ACSMIGRA.TERCERO_MIG.TIPOID@DESA%TYPE;
		V_NUMID 			ACSMIGRA.TERCERO_MIG.NUMID@DESA%TYPE;
		V_DVID 				ACSMIGRA.TERCERO_MIG.DVID@DESA%TYPE;
		V_NOMTER 			ACSMIGRA.TERCERO_MIG.NOMTER@DESA%TYPE;
		V_APETER 			ACSMIGRA.TERCERO_MIG.APETER@DESA%TYPE;
		V_CODPAIS 			ACSMIGRA.TERCERO_MIG.CODPAIS@DESA%TYPE;
		V_CODESTADO 		ACSMIGRA.TERCERO_MIG.CODESTADO@DESA%TYPE;
		V_CODCIUDAD 		ACSMIGRA.TERCERO_MIG.CODCIUDAD@DESA%TYPE;
		V_CODMUNICIPIO 		ACSMIGRA.TERCERO_MIG.CODMUNICIPIO@DESA%TYPE;
		V_DIREC 			ACSMIGRA.TERCERO_MIG.DIREC@DESA%TYPE;
		V_TELEF1 			ACSMIGRA.TERCERO_MIG.TELEF1@DESA%TYPE;
		V_TELEF2 			ACSMIGRA.TERCERO_MIG.TELEF2@DESA%TYPE;
		V_TELEF3 			ACSMIGRA.TERCERO_MIG.TELEF3@DESA%TYPE;
		V_FAX 				ACSMIGRA.TERCERO_MIG.FAX@DESA%TYPE;
		V_TELEX 			ACSMIGRA.TERCERO_MIG.TELEX@DESA%TYPE;
		V_ZIP 				ACSMIGRA.TERCERO_MIG.ZIP@DESA%TYPE;
		V_INDNACIONAL 		ACSMIGRA.TERCERO_MIG.INDNACIONAL@DESA%TYPE;
		V_STSTER 			ACSMIGRA.TERCERO_MIG.STSTER@DESA%TYPE;
		V_FECSTS 			ACSMIGRA.TERCERO_MIG.FECSTS@DESA%TYPE;
		V_NUMCTAAUXI 		ACSMIGRA.TERCERO_MIG.NUMCTAAUXI@DESA%TYPE;
		V_EMAIL 			ACSMIGRA.TERCERO_MIG.EMAIL@DESA%TYPE;
		V_TIPOTER 			ACSMIGRA.TERCERO_MIG.TIPOTER@DESA%TYPE;
		V_RIF 				ACSMIGRA.TERCERO_MIG.RIF@DESA%TYPE;
		V_NIT 				ACSMIGRA.TERCERO_MIG.NIT@DESA%TYPE;
		V_CODPARROQUIA 		ACSMIGRA.TERCERO_MIG.CODPARROQUIA@DESA%TYPE;
		V_CODSECTOR 		ACSMIGRA.TERCERO_MIG.CODSECTOR@DESA%TYPE;
		V_WEBSITE 			ACSMIGRA.TERCERO_MIG.WEBSITE@DESA%TYPE;
		V_RAZONSOCIAL 		ACSMIGRA.TERCERO_MIG.RAZONSOCIAL@DESA%TYPE;
		V_INDMIGRA 			ACSMIGRA.TERCERO_MIG.INDMIGRA@DESA%TYPE;
		V_MIGRA 			ACSMIGRA.TERCERO_MIG.MIGRA@DESA%TYPE;
		--
		V_CODCLI			ACSMIGRA.CLIENTE_MIG.CODCLI@DESA%TYPE;
		V_CLASECLI 			ACSMIGRA.CLIENTE_MIG.CLASECLI@DESA%TYPE;
		V_TIPOCLI 			ACSMIGRA.CLIENTE_MIG.TIPOCLI@DESA%TYPE;
		V_SEXO 				ACSMIGRA.CLIENTE_MIG.SEXO@DESA%TYPE;
		V_FECNAC			ACSMIGRA.CLIENTE_MIG.FECNAC@DESA%TYPE;
		V_EDOCIVIL 			ACSMIGRA.CLIENTE_MIG.EDOCIVIL@DESA%TYPE;
		V_CODACT 			ACSMIGRA.CLIENTE_MIG.CODACT@DESA%TYPE;
		V_CODFUERZA 		ACSMIGRA.CLIENTE_MIG.CODFUERZA@DESA%TYPE;
		V_CODGRADO 			ACSMIGRA.CLIENTE_MIG.CODGRADO@DESA%TYPE;
		V_FECVINC 			ACSMIGRA.CLIENTE_MIG.FECVINC@DESA%TYPE;
		V_FECLISTANEGRA 	ACSMIGRA.CLIENTE_MIG.FECLISTANEGRA@DESA%TYPE;
		V_CODLISTANEGRA		ACSMIGRA.CLIENTE_MIG.CODLISTANEGRA@DESA%TYPE;
		V_MTOINGANUAL 		ACSMIGRA.CLIENTE_MIG.MTOINGANUAL@DESA%TYPE;
		V_FECINGANUAL		ACSMIGRA.CLIENTE_MIG.FECINGANUAL@DESA%TYPE;
		V_TIPOCONYUGE		ACSMIGRA.CLIENTE_MIG.TIPOCONYUGE@DESA%TYPE;
		V_NUMIDCONYUGE 		ACSMIGRA.CLIENTE_MIG.NUMIDCONYUGE@DESA%TYPE;
		V_NOMCONYUGE		ACSMIGRA.CLIENTE_MIG.NOMCONYUGE@DESA%TYPE;
		V_APECONYUGE		ACSMIGRA.CLIENTE_MIG.APECONYUGE@DESA%TYPE;
		V_INDCONTRAGARANTE	ACSMIGRA.CLIENTE_MIG.INDCONTRAGARANTE@DESA%TYPE;
		V_CODINGANUAL		ACSMIGRA.CLIENTE_MIG.CODINGANUAL@DESA%TYPE;
		V_NUMEXP			ACSMIGRA.CLIENTE_MIG.NUMEXP@DESA%TYPE;
		--
		CURSOR CUR_GENERAL
		IS
		SELECT 
			TIPOID,NUMID,DVID,MAX (NOMTER) NOMTER,MAX (APETER) APETER,MAX (CODPAIS) CODPAIS,MAX (CODESTADO) CODESTADO,
			MAX (CODCIUDAD) CODCIUDAD,MAX (CODMUNICIPIO) CODMUNICIPIO,MAX (DIREC) DIREC,MAX (TELEF1) TELEF1,MAX (TELEF2) TELEF2,
			MAX (TELEF3) TELEF3,MAX (FAX) FAX,MAX (TELEX) TELEX,MAX (ZIP) ZIP,MAX (INDNACIONAL) INDNACIONAL,MAX (STSTER) STSTER,
			MAX (FECSTS) FECSTS,MAX (NUMCTAAUXI) NUMCTAAUXI,MAX (EMAIL) EMAIL,MAX (TIPOTER) TIPOTER,MAX (RIF) RIF,MAX (NIT) NIT,
			MAX (CODPARROQUIA) CODPARROQUIA,MAX (CODSECTOR) CODSECTOR,MAX (WEBSITE) WEBSITE,MAX (RAZONSOCIAL) RAZONSOCIAL,
			MAX (INDMIGRA) INDMIGRA,MAX (MIGRA) MIGRA,CODCLI CODCLI,MAX (CLASECLI) CLASECLI,MAX (TIPOCLI) TIPOCLI,MAX (SEXO) SEXO,
			MAX (FECNAC) FECNAC,MAX (EDOCIVIL) EDOCIVIL,MAX (CODACT) CODACT,MAX (CODFUERZA) CODFUERZA,MAX (CODGRADO) CODGRADO,
			MAX (FECVINC) FECVINC,MAX (FECLISTANEGRA) FECLISTANEGRA,MAX (CODLISTANEGRA) CODLISTANEGRA,MAX (MTOINGANUAL) MTOINGANUAL,
			MAX (FECINGANUAL) FECINGANUAL,MAX (TIPOCONYUGE) TIPOCONYUGE,MAX (NUMIDCONYUGE) NUMIDCONYUGE,MAX (NOMCONYUGE) NOMCONYUGE,
			MAX (APECONYUGE) APECONYUGE,MAX (INDCONTRAGARANTE) INDCONTRAGARANTE,MAX (CODINGANUAL) CODINGANUAL,MAX (NUMEXP) NUMEXP,
			MAX (NOMBRETABLA) NOMBRETABLA
		FROM (
			SELECT
				TIPOID TIPOID,NUMID NUMID,DVID DVID,NOMASE NOMTER,NULL APETER,NULL CODPAIS,NULL CODESTADO,NULL CODCIUDAD,NULL CODMUNICIPIO,
				DIRRG1 DIREC,TO_CHAR (TELEF) TELEF1,NULL TELEF2,NULL TELEF3,NULL FAX,NULL TELEX,NULL ZIP,INDNACIONAL INDNACIONAL,
				NULL STSTER,NULL FECSTS,NULL NUMCTAAUXI,NULL EMAIL,NULL TIPOTER,NULL RIF,NULL NIT,NULL CODPARROQUIA,NULL CODSECTOR,
				NULL WEBSITE,NULL RAZONSOCIAL,NULL INDMIGRA,NULL MIGRA,CODCLI CODCLI,NULL CLASECLI,NULL TIPOCLI,
				(CASE SEXO
					WHEN 2 THEN 'M'
					WHEN 1 THEN 'F'
					ELSE 'M'
				END) SEXO,
				TO_CHAR (PM.VALIDA_CONVIERTE_FECHA (DIANAC,MESNAC,ANONAC)) FECNAC,NULL EDOCIVIL,NULL CODACT,NULL CODFUERZA,NULL CODGRADO,
				NULL FECVINC,NULL FECLISTANEGRA,NULL CODLISTANEGRA,NULL MTOINGANUAL,NULL FECINGANUAL,NULL TIPOCONYUGE,NULL NUMIDCONYUGE,
				NULL NOMCONYUGE,NULL APECONYUGE,NULL INDCONTRAGARANTE,NULL CODINGANUAL,NULL NUMEXP,'EQ_HJPF01' NOMBRETABLA
			FROM EQ_HJPF01
			UNION ALL
			SELECT
				TIPOID TIPOID,NUMID NUMID,DVID DVID,NOMTER NOMTER,NULL APETER,NULL CODPAIS,NULL CODESTADO,NULL CODCIUDAD,NULL CODMUNICIPIO,
				DIREC DIREC,TO_CHAR (TELEF1) TELEF1,TO_CHAR (TELEF2) TELEF2,TO_CHAR (TELEF3) TELEF3,NULL FAX,NULL TELEX,NULL ZIP,
				INDNACIONAL INDNACIONAL,NULL STSTER,NULL FECSTS,NULL NUMCTAAUXI,NULL EMAIL,NULL TIPOTER,NULL RIF,NULL NIT,NULL CODPARROQUIA,
				NULL CODSECTOR,NULL WEBSITE,NULL RAZONSOCIAL,NULL INDMIGRA,NULL MIGRA,CODCLI CODCLI,NULL CLASECLI,NULL TIPOCLI,
				(CASE SEXO
					WHEN '2' THEN 'M'
					WHEN '1' THEN 'F'
					WHEN 'M' THEN 'M'
					WHEN 'F' THEN 'F'
					ELSE 'M'
				END) SEXO,
				NULL FECNAC,NULL EDOCIVIL,NULL CODACT,NULL CODFUERZA,NULL CODGRADO,NULL FECVINC,NULL FECLISTANEGRA,NULL CODLISTANEGRA,
				NULL MTOINGANUAL,NULL FECINGANUAL,NULL TIPOCONYUGE,NULL NUMIDCONYUGE,NULL NOMCONYUGE,NULL APECONYUGE,NULL INDCONTRAGARANTE,
				NULL CODINGANUAL,NULL NUMEXP,'EQ_HJPF205' NOMBRETABLA
			FROM EQ_HJPF205
			UNION ALL
			SELECT
				TIPOID TIPOID,NUMID NUMID,DVID DVID,NOMAF NOMTER,NULL APETER,NULL CODPAIS,NULL CODESTADO,NULL CODCIUDAD,NULL CODMUNICIPIO,
				DIRAF DIREC,TO_CHAR (TELAF) TELEF1,NULL TELEF2,NULL TELEF3,NULL FAX,NULL TELEX,NULL ZIP,INDNACIONAL INDNACIONAL,NULL STSTER,
				NULL FECSTS,NULL NUMCTAAUXI,NULL EMAIL,NULL TIPOTER,TO_CHAR (CCLI2) RIF,NULL NIT,NULL CODPARROQUIA,NULL CODSECTOR,NULL WEBSITE,
				NULL RAZONSOCIAL,NULL INDMIGRA,NULL MIGRA,CODCLI CODCLI,NULL CLASECLI,NULL TIPOCLI,'M' SEXO,NULL FECNAC,NULL EDOCIVIL,
				NULL CODACT,NULL CODFUERZA,NULL CODGRADO,NULL FECVINC,NULL FECLISTANEGRA,NULL CODLISTANEGRA,NULL MTOINGANUAL,NULL FECINGANUAL,
				NULL TIPOCONYUGE,NULL NUMIDCONYUGE,NULL NOMCONYUGE,NULL APECONYUGE,NULL INDCONTRAGARANTE,NULL CODINGANUAL,NULL NUMEXP,
				'EQ_FNPF01' NOMBRETABLA
			FROM EQ_FNPF01
			UNION ALL
			SELECT
				TIPOID TIPOID,NUMID NUMID,DVID DVID,NOMORD NOMTER,NULL APETER,NULL CODPAIS,NULL CODESTADO,NULL CODCIUDAD,NULL CODMUNICIPIO,
				NULL DIREC,NULL TELEF1,NULL TELEF2,NULL TELEF3,NULL FAX,NULL TELEX,NULL ZIP,INDNACIONAL INDNACIONAL,NULL STSTER,NULL FECSTS,
				NULL NUMCTAAUXI,NULL EMAIL,NULL TIPOTER,TO_CHAR (RIF) RIF,NULL NIT,NULL CODPARROQUIA,NULL CODSECTOR,NULL WEBSITE,
				NULL RAZONSOCIAL,NULL INDMIGRA,NULL MIGRA,CODCLI CODCLI,NULL CLASECLI,NULL TIPOCLI,'M' SEXO,NULL FECNAC,NULL EDOCIVIL,
				NULL CODACT,NULL CODFUERZA,NULL CODGRADO,NULL FECVINC,NULL FECLISTANEGRA,NULL CODLISTANEGRA,NULL MTOINGANUAL,NULL FECINGANUAL,
				NULL TIPOCONYUGE,NULL NUMIDCONYUGE,NULL NOMCONYUGE,NULL APECONYUGE,NULL INDCONTRAGARANTE,NULL CODINGANUAL,NULL NUMEXP,
				'EQ_ORDENE' NOMBRETABLA
			FROM EQ_ORDENE
			UNION ALL
			SELECT
				TIPOID TIPOID,NUMID NUMID,DVID DVID,NOMOPA NOMTER,NULL APETER,NULL CODPAIS,NULL CODESTADO,NULL CODCIUDAD,NULL CODMUNICIPIO,
				NULL DIREC,NULL TELEF1,NULL TELEF2,NULL TELEF3,NULL FAX,NULL TELEX,NULL ZIP,PM.BUSQUEDA_INDNACIONAL (TIPOID) INDNACIONAL,
				NULL STSTER,NULL FECSTS,NULL NUMCTAAUXI,NULL EMAIL,NULL TIPOTER,TO_CHAR (RIF) RIF,NULL NIT,NULL CODPARROQUIA,NULL CODSECTOR,
				NULL WEBSITE,NULL RAZONSOCIAL,NULL INDMIGRA,NULL MIGRA,CODCLI CODCLI,NULL CLASECLI,NULL TIPOCLI,'M' SEXO,NULL FECNAC,
				NULL EDOCIVIL,NULL CODACT,NULL CODFUERZA,NULL CODGRADO,NULL FECVINC,NULL FECLISTANEGRA,NULL CODLISTANEGRA,NULL MTOINGANUAL,
				NULL FECINGANUAL,NULL TIPOCONYUGE,NULL NUMIDCONYUGE,NULL NOMCONYUGE,NULL APECONYUGE,NULL INDCONTRAGARANTE,NULL CODINGANUAL,
				NULL NUMEXP,'EQ_ORPF06' NOMBRETABLA
			FROM EQ_ORPF06
			UNION ALL
			SELECT
				TIPOID TIPOID,NUMID NUMID,DVID DVID,COLASE NOMTER,NULL APETER,NULL CODPAIS,NULL CODESTADO,NULL CODCIUDAD,NULL CODMUNICIPIO,
				DIRDE DIREC,TO_CHAR (TELEF) TELEF1,NULL TELEF2,NULL TELEF3,NULL FAX,NULL TELEX,NULL ZIP,INDNACIONAL INDNACIONAL,NULL STSTER,
				NULL FECSTS,NULL NUMCTAAUXI,NULL EMAIL,NULL TIPOTER,NULL RIF,NULL NIT,NULL CODPARROQUIA,NULL CODSECTOR,NULL WEBSITE,
				NULL RAZONSOCIAL,NULL INDMIGRA,NULL MIGRA,CODCLI CODCLI,NULL CLASECLI,NULL TIPOCLI,
				(CASE SEXO
					WHEN '2' THEN 'M'
					WHEN '1' THEN 'F'
					ELSE 'M'
				END) SEXO,
				TO_CHAR (PM.VALIDA_CONVIERTE_FECHA (DIANAC,MESNAC,ANONAC)) FECNAC,NULL EDOCIVIL,NULL CODACT,NULL CODFUERZA,NULL CODGRADO,
				NULL FECVINC,NULL FECLISTANEGRA,NULL CODLISTANEGRA,NULL MTOINGANUAL,NULL FECINGANUAL,NULL TIPOCONYUGE,NULL NUMIDCONYUGE,
				NULL NOMCONYUGE,NULL APECONYUGE,NULL INDCONTRAGARANTE,NULL CODINGANUAL,NULL NUMEXP,'EQ_CLPF07' NOMBRETABLA
			FROM EQ_CLPF07
			UNION ALL
			SELECT
				TIPOID TIPOID,NUMID NUMID,DVID DVID,NOMBEN NOMTER,NULL APETER,NULL CODPAIS,NULL CODESTADO,NULL CODCIUDAD,NULL CODMUNICIPIO,
				DIREC DIREC,TO_CHAR (TELEF) TELEF1,NULL TELEF2,NULL TELEF3,NULL FAX,NULL TELEX,NULL ZIP,INDNACIONAL INDNACIONAL,NULL STSTER,
				NULL FECSTS,NULL NUMCTAAUXI,NULL EMAIL,NULL TIPOTER,NULL RIF,NULL NIT,NULL CODPARROQUIA,NULL CODSECTOR,NULL WEBSITE,
				NULL RAZONSOCIAL,NULL INDMIGRA,NULL MIGRA,CODCLI CODCLI,NULL CLASECLI,NULL TIPOCLI,
				(CASE SEXO
					WHEN '2' THEN 'M'
					WHEN '1' THEN 'F'
					ELSE 'M'
				END) SEXO,
				TO_CHAR (PM.VALIDA_CONVIERTE_FECHA (DIANAC,MESNAC,ANONAC)) FECNAC,NULL EDOCIVIL,NULL CODACT,NULL CODFUERZA,NULL CODGRADO,
				NULL FECVINC,NULL FECLISTANEGRA,NULL CODLISTANEGRA,NULL MTOINGANUAL,NULL FECINGANUAL,NULL TIPOCONYUGE,NULL NUMIDCONYUGE,
				NULL NOMCONYUGE,NULL APECONYUGE1,NULL INDCONTRAGARANTE,NULL CODINGANUAL,NULL NUMEXP,'EQ_HJPF06' NOMBRETABLA
			FROM EQ_HJPF06
		) AAA
		WHERE NOT EXISTS (
			SELECT * FROM TERCERO_MIG_PRUEBA BBB
			WHERE  BBB.TIPOID = AAA.TIPOID
			AND BBB.NUMID = AAA.NUMID
			AND BBB.DVID = AAA.DVID
		)
		GROUP BY TIPOID,NUMID,DVID,CODCLI;
		--
		CURSOR CUR_TERCERO_MIG (
			P_TIPOID	ACSMIGRA.TERCERO_MIG.TIPOID@DESA%TYPE,
			P_NUMID 	ACSMIGRA.TERCERO_MIG.NUMID@DESA%TYPE,
			P_DVID 		ACSMIGRA.TERCERO_MIG.DVID@DESA%TYPE
		)
		IS
		SELECT * FROM TERCERO_MIG_PRUEBA
		WHERE TIPOID = P_TIPOID
		AND NUMID = P_NUMID
		AND DVID = P_DVID;
		--
		RT_CUR_TERCERO_MIG 	CUR_TERCERO_MIG%ROWTYPE;
		--
		CURSOR CUR_CLIENTE_MIG (
			P_TIPOID 	ACSMIGRA.CLIENTE_MIG.TIPOID@DESA%TYPE,
			P_NUMID 	ACSMIGRA.CLIENTE_MIG.NUMID@DESA%TYPE,
			P_DVID 		ACSMIGRA.CLIENTE_MIG.DVID@DESA%TYPE,
			P_CODCLI	ACSMIGRA.CLIENTE_MIG.CODCLI@DESA%TYPE
		)
		IS
		SELECT * FROM CLIENTE_MIG_PRUEBA
		WHERE TIPOID = P_TIPOID
		AND NUMID = P_NUMID
		AND DVID = P_DVID
		AND CODCLI = P_CODCLI;
		--
		RT_CUR_CLIENTE_MIG 	CUR_CLIENTE_MIG%ROWTYPE;
		--
		CURSOR CUR_TERCERO_ROL_MIG (
			P_TIPOID	ACSMIGRA.TERCERO_ROL_MIG.TIPOID@DESA%TYPE,
			P_NUMID 	ACSMIGRA.TERCERO_ROL_MIG.NUMID@DESA%TYPE,
			P_DVID 		ACSMIGRA.TERCERO_ROL_MIG.DVID@DESA%TYPE,
			P_TIPOTER 	ACSMIGRA.TERCERO_ROL_MIG.TIPOTER@DESA%TYPE
		)
		IS
		SELECT * FROM TERCERO_ROL_MIG_PRUEBA
		WHERE TIPOID = P_TIPOID
		AND NUMID = P_NUMID
		AND DVID = P_DVID
		AND TIPOTER = P_TIPOTER;
		--
		RT_CUR_TERCERO_ROL_MIG 	CUR_TERCERO_ROL_MIG%ROWTYPE;
		--
		ITIPOERROR 	ERR_MIG_CLIENTE.TIPOERROR%TYPE;
		ICODERROR 	ERR_MIG_CLIENTE.CODERROR%TYPE;
		INOMPROCESO ERR_MIG_CLIENTE.NOMPROCESO%TYPE;
		INOMTABLA 	ERR_MIG_CLIENTE.NOMTABLA%TYPE;
		IERROR 		ERR_MIG_CLIENTE.ORAERROR%TYPE;
		IDISPONIBLE	BOOLEAN;
	BEGIN
		FOR I IN CUR_GENERAL
		LOOP
			V_TIPOID := NULL;
			V_NUMID := NULL;
			V_DVID := NULL;
			V_NOMTER := NULL;
			V_APETER := NULL;
			V_CODPAIS := NULL;
			V_CODESTADO := NULL;
			V_CODCIUDAD := NULL;
			V_CODMUNICIPIO := NULL;
			V_DIREC := NULL;
			V_TELEF1 := NULL;
			V_TELEF2 := NULL;
			V_TELEF3 := NULL;
			V_FAX := NULL;
			V_TELEX := NULL;
			V_ZIP := NULL;
			V_INDNACIONAL := NULL;
			V_STSTER := NULL;
			V_FECSTS := NULL;
			V_NUMCTAAUXI := NULL;
			V_EMAIL := NULL;
			V_TIPOTER := NULL;
			V_RIF := NULL;
			V_NIT := NULL;
			V_CODPARROQUIA := NULL;
			V_CODSECTOR := NULL;
			V_WEBSITE := NULL;
			V_RAZONSOCIAL := NULL;
			V_INDMIGRA := NULL;
			V_MIGRA := NULL;
			--
			V_CODCLI := NULL;
			V_CLASECLI := NULL;
			V_TIPOCLI := NULL;
			V_SEXO := NULL;
			V_FECNAC := NULL;
			V_EDOCIVIL := NULL;
			V_CODACT := NULL;
			V_CODFUERZA := NULL;
			V_CODGRADO := NULL;
			V_FECVINC := NULL;
			V_FECLISTANEGRA := NULL;
			V_CODLISTANEGRA := NULL;
			V_MTOINGANUAL := NULL;
			V_FECINGANUAL := NULL;
			V_TIPOCONYUGE := NULL;
			V_NUMIDCONYUGE := NULL;
			V_NOMCONYUGE := NULL;
			V_APECONYUGE := NULL;
			V_INDCONTRAGARANTE := NULL;
			V_CODINGANUAL := NULL;
			V_NUMEXP := NULL;
			--
			V_TIPOID := I.TIPOID;
			V_NUMID := I.NUMID;
			V_DVID := I.DVID;
			V_NOMTER := I.NOMTER;
			V_APETER := I.APETER;
			V_CODPAIS := '001';
			V_CODESTADO := '999';
			V_CODCIUDAD := '999';
			V_CODMUNICIPIO := '999';
			V_DIREC := I.DIREC;
			V_TELEF1 := I.TELEF1;
			V_TELEF2 := I.TELEF2;
			V_TELEF3 := I.TELEF3;
			V_FAX := I.FAX;
			V_TELEX := I.TELEX;
			V_ZIP := I.ZIP;
			V_INDNACIONAL := I.INDNACIONAL;
			V_STSTER := 'INA';
			V_FECSTS := '01/01/2000';
			V_NUMCTAAUXI := I.NUMCTAAUXI;
			V_EMAIL := I.EMAIL;
			V_TIPOTER := 'CI';
			V_RIF := I.RIF;
			V_NIT := I.NIT;
			V_CODPARROQUIA := '999';
			V_CODSECTOR := '999';
			V_WEBSITE := I.WEBSITE;
			V_RAZONSOCIAL := (
				CASE
					WHEN V_TIPOID = 'J' THEN TRIM (V_NOMTER)
					ELSE NULL 
				END
			);
			V_INDMIGRA := I.INDMIGRA;
			V_MIGRA := I.MIGRA;
			--
			V_CODCLI := I.CODCLI;
			V_CLASECLI := '006';
			V_TIPOCLI := (
				CASE V_TIPOID
					WHEN 'J' THEN 'E'
					WHEN 'G' THEN 'G'
					WHEN 'V' THEN 'P'
					WHEN 'E' THEN 'P'
					ELSE NULL
				END
			);
			V_SEXO := I.SEXO;
			V_FECNAC := I.FECNAC;
			V_EDOCIVIL := '9';
			V_CODACT := '9999';
			V_CODFUERZA := I.CODFUERZA;
			V_CODGRADO := I.CODGRADO;
			V_FECVINC := '01/01/2000';
			V_FECLISTANEGRA := I.FECLISTANEGRA;
			V_CODLISTANEGRA := I.CODLISTANEGRA;
			V_MTOINGANUAL := I.MTOINGANUAL;
			V_FECINGANUAL := '01/01/2000';
			V_TIPOCONYUGE := I.TIPOCONYUGE;
			V_NUMIDCONYUGE := I.NUMIDCONYUGE;
			V_NOMCONYUGE := I.NOMCONYUGE;
			V_APECONYUGE := I.APECONYUGE;
			V_INDCONTRAGARANTE := I.INDCONTRAGARANTE;
			V_CODINGANUAL := I.CODINGANUAL;
			V_NUMEXP := I.NUMEXP;
			--
			IF V_TIPOID IN ('J','G') THEN
				V_SEXO := 'N';
			END IF;
			--
			V_NOMTER := PM.ELIMINA_ESPACIOS (UPPER(V_NOMTER));
			V_DIREC := PM.ELIMINA_ESPACIOS (
				UPPER(
					(CASE
						WHEN TRIM (V_DIREC) IS NULL THEN 'SIN DIRECCION'
						ELSE V_DIREC
					END)
				)
			);
			V_RAZONSOCIAL := PM.ELIMINA_ESPACIOS (
				UPPER(
					(CASE
						WHEN V_TIPOID = 'J' THEN V_NOMTER 
					END)
				)
			);
			--
			IDISPONIBLE := TRUE;
			iTipoError := 'ERR-TERCEROS';
			iNomProceso := 'PROCESO GENERAL DE TERCEROS';
			iNomTabla := I.NOMBRETABLA;
			--
			IF V_NOMTER IS NULL THEN
				IDISPONIBLE := FALSE;
				iCodError := '001';
				--
				SELECT DESCRIPCION INTO iError
				FROM ERRORES
				WHERE TIPOERROR = iTipoError
				AND CODERROR = iCodError;
				--
				PM.GENERA_ERROR_CLIENTE (
					NTIPOERROR => iTipoError,
					NCODERROR => iCodError,
					NNOMPROCESO => iNomProceso,
					NNOMTABLA => iNomTabla,
					NTIPOID => V_TIPOID,
					NNUMID => V_NUMID,
					NDVID => V_DVID,
					NCODCLI => V_CODCLI,
					NERROR => iError
				);
			END IF;
			--
			IF V_TIPOID IN ('N','M') OR TRIM (V_TIPOID) IS NULL THEN
				IDISPONIBLE := FALSE;
				iCodError := '003';
				--
				SELECT DESCRIPCION INTO iError
				FROM ERRORES
				WHERE TIPOERROR = iTipoError
				AND CODERROR = iCodError;
				--
				PM.GENERA_ERROR_CLIENTE (
					NTIPOERROR => iTipoError,
					NCODERROR => iCodError,
					NNOMPROCESO => iNomProceso,
					NNOMTABLA => iNomTabla,
					NTIPOID => V_TIPOID,
					NNUMID => V_NUMID,
					NDVID => V_DVID,
					NCODCLI => V_CODCLI,
					NERROR => iError
				);
			END IF;
			--
			IF IDISPONIBLE = TRUE THEN
				OPEN CUR_TERCERO_MIG (V_TIPOID,V_NUMID,V_DVID);
				FETCH CUR_TERCERO_MIG INTO RT_CUR_TERCERO_MIG;

				IF CUR_TERCERO_MIG%NOTFOUND THEN
					BEGIN
						INSERT INTO TERCERO_MIG_PRUEBA (
							TIPOID,NUMID,DVID,NOMTER,APETER,CODPAIS,CODESTADO,CODCIUDAD,CODMUNICIPIO,DIREC,TELEF1,TELEF2,TELEF3,FAX,TELEX,ZIP,
							INDNACIONAL,STSTER,FECSTS,NUMCTAAUXI,EMAIL,TIPOTER,RIF,NIT,CODPARROQUIA,CODSECTOR,WEBSITE,RAZONSOCIAL,INDMIGRA,MIGRA
						)
						VALUES (
							v_TIPOID,v_NUMID,v_DVID,v_NOMTER,v_APETER,v_CODPAIS,v_CODESTADO,v_CODCIUDAD,v_CODMUNICIPIO,v_DIREC,v_TELEF1,
							v_TELEF2,v_TELEF3,v_FAX,v_TELEX,v_ZIP,v_INDNACIONAL,v_STSTER,v_FECSTS,v_NUMCTAAUXI,v_EMAIL,v_TIPOTER,v_RIF,
							v_NIT,v_CODPARROQUIA,v_CODSECTOR,v_WEBSITE,v_RAZONSOCIAL,v_INDMIGRA,v_MIGRA
						);
					EXCEPTION WHEN OTHERS THEN
						iCodError := '002';
						iError := SQLERRM;
						PM.GENERA_ERROR_CLIENTE (
							NTIPOERROR => iTipoError,
							NCODERROR => iCodError,
							NNOMPROCESO => iNomProceso,
							NNOMTABLA => iNomTabla,
							NTIPOID => V_TIPOID,
							NNUMID => V_NUMID,
							NDVID => V_DVID,
							NCODCLI => V_CODCLI,
							NERROR => iError
						);
					END;
				END IF;
				CLOSE CUR_TERCERO_MIG;
				--
				OPEN CUR_CLIENTE_MIG (V_TIPOID,V_NUMID,V_DVID,V_CODCLI);
				FETCH CUR_CLIENTE_MIG INTO RT_CUR_CLIENTE_MIG;

				IF CUR_CLIENTE_MIG%NOTFOUND THEN
					BEGIN
						INSERT INTO CLIENTE_MIG_PRUEBA (
							TIPOID,NUMID,DVID,CODCLI,CLASECLI,TIPOCLI,SEXO,FECNAC,EDOCIVIL,CODACT,CODFUERZA,CODGRADO,FECVINC,
							FECLISTANEGRA,CODLISTANEGRA,MTOINGANUAL,FECINGANUAL,NUMCTAAUXI,TIPOCONYUGE,NUMIDCONYUGE,NOMCONYUGE,
							APECONYUGE,INDCONTRAGARANTE,CODINGANUAL,NUMEXP,INDMIGRA
						)
						VALUES (
							V_TIPOID,V_NUMID,V_DVID,V_CODCLI,V_CLASECLI,V_TIPOCLI,V_SEXO,V_FECNAC,V_EDOCIVIL,V_CODACT,V_CODFUERZA,
							V_CODGRADO,V_FECVINC,V_FECLISTANEGRA,V_CODLISTANEGRA,V_MTOINGANUAL,V_FECINGANUAL,V_NUMCTAAUXI,V_TIPOCONYUGE,
							V_NUMIDCONYUGE,V_NOMCONYUGE,V_APECONYUGE,V_INDCONTRAGARANTE,V_CODINGANUAL,V_NUMEXP,V_INDMIGRA
						);
						COMMIT;
					EXCEPTION WHEN OTHERS THEN
						iCodError := '002';
						iError := SQLERRM;
						PM.GENERA_ERROR_CLIENTE (
							NTIPOERROR => iTipoError,
							NCODERROR => iCodError,
							NNOMPROCESO => iNomProceso,
							NNOMTABLA => iNomTabla,
							NTIPOID => V_TIPOID,
							NNUMID => V_NUMID,
							NDVID => V_DVID,
							NCODCLI => V_CODCLI,
							NERROR => iError
						);
					END;
					--
					OPEN CUR_TERCERO_ROL_MIG (V_TIPOID,V_NUMID,V_DVID,V_TIPOTER);
					FETCH CUR_TERCERO_ROL_MIG INTO RT_CUR_TERCERO_ROL_MIG;

					IF CUR_TERCERO_ROL_MIG%NOTFOUND THEN
						BEGIN
							INSERT INTO TERCERO_ROL_MIG_PRUEBA (TIPOID,NUMID,DVID,TIPOTER,STSROL,FECSTS)
							VALUES (V_TIPOID,V_NUMID,V_DVID,V_TIPOTER,V_STSTER,V_FECSTS);
							COMMIT;
						EXCEPTION WHEN OTHERS THEN
							iCodError := '002';
							iError := SQLERRM;
							--
							PM.GENERA_ERROR_CLIENTE (
								NTIPOERROR => iTipoError,
								NCODERROR => iCodError,
								NNOMPROCESO => iNomProceso,
								NNOMTABLA => iNomTabla,
								NTIPOID => V_TIPOID,
								NNUMID => V_NUMID,
								NDVID => V_DVID,
								NCODCLI => V_CODCLI,
								NERROR => iError
							);
						END;
					END IF;
					CLOSE CUR_TERCERO_ROL_MIG;
				END IF;
				--
				ROLLBACK;
				CLOSE CUR_CLIENTE_MIG;
			END IF;
		END LOOP;
	END MIGRACION_GENERAL_TERCEROS;
	--
	PROCEDURE MIGRACION_GENERAL_TERCEROS_M
	IS
		V_TIPOID 		ACSMIGRA.TERCERO_MIG.TIPOID@DESA%TYPE;
		V_NUMID 		ACSMIGRA.TERCERO_MIG.NUMID@DESA%TYPE;
		V_DVID 			ACSMIGRA.TERCERO_MIG.DVID@DESA%TYPE;
		V_NOMTER 		ACSMIGRA.TERCERO_MIG.NOMTER@DESA%TYPE;
		V_APETER 		ACSMIGRA.TERCERO_MIG.APETER@DESA%TYPE;
		V_CODPAIS 		ACSMIGRA.TERCERO_MIG.CODPAIS@DESA%TYPE;
		V_CODESTADO 	ACSMIGRA.TERCERO_MIG.CODESTADO@DESA%TYPE;
		V_CODCIUDAD 	ACSMIGRA.TERCERO_MIG.CODCIUDAD@DESA%TYPE;
		V_CODMUNICIPIO 	ACSMIGRA.TERCERO_MIG.CODMUNICIPIO@DESA%TYPE;
		V_DIREC 		ACSMIGRA.TERCERO_MIG.DIREC@DESA%TYPE;
		V_TELEF1 		ACSMIGRA.TERCERO_MIG.TELEF1@DESA%TYPE;
		V_TELEF2 		ACSMIGRA.TERCERO_MIG.TELEF2@DESA%TYPE;
		V_TELEF3 		ACSMIGRA.TERCERO_MIG.TELEF3@DESA%TYPE;
		V_FAX 			ACSMIGRA.TERCERO_MIG.FAX@DESA%TYPE;
		V_TELEX 		ACSMIGRA.TERCERO_MIG.TELEX@DESA%TYPE;
		V_ZIP 			ACSMIGRA.TERCERO_MIG.ZIP@DESA%TYPE;
		V_INDNACIONAL 	ACSMIGRA.TERCERO_MIG.INDNACIONAL@DESA%TYPE;
		V_STSTER 		ACSMIGRA.TERCERO_MIG.STSTER@DESA%TYPE;
		V_FECSTS 		ACSMIGRA.TERCERO_MIG.FECSTS@DESA%TYPE;
		V_NUMCTAAUXI 	ACSMIGRA.TERCERO_MIG.NUMCTAAUXI@DESA%TYPE;
		V_EMAIL 		ACSMIGRA.TERCERO_MIG.EMAIL@DESA%TYPE;
		V_TIPOTER 		ACSMIGRA.TERCERO_MIG.TIPOTER@DESA%TYPE;
		V_RIF 			ACSMIGRA.TERCERO_MIG.RIF@DESA%TYPE;
		V_NIT 			ACSMIGRA.TERCERO_MIG.NIT@DESA%TYPE;
		V_CODPARROQUIA 	ACSMIGRA.TERCERO_MIG.CODPARROQUIA@DESA%TYPE;
		v_CODSECTOR 	ACSMIGRA.TERCERO_MIG.CODSECTOR@DESA%TYPE;
		V_WEBSITE 		ACSMIGRA.TERCERO_MIG.WEBSITE@DESA%TYPE;
		V_RAZONSOCIAL 	ACSMIGRA.TERCERO_MIG.RAZONSOCIAL@DESA%TYPE;
		V_INDMIGRA 		ACSMIGRA.TERCERO_MIG.INDMIGRA@DESA%TYPE;
		V_MIGRA 		ACSMIGRA.TERCERO_MIG.MIGRA@DESA%TYPE;
		--
		V_CODCLI 			ACSMIGRA.CLIENTE_MIG.CODCLI@DESA%TYPE;
		V_CLASECLI 			ACSMIGRA.CLIENTE_MIG.CLASECLI@DESA%TYPE;
		V_TIPOCLI 			ACSMIGRA.CLIENTE_MIG.TIPOCLI@DESA%TYPE;
		V_SEXO 				ACSMIGRA.CLIENTE_MIG.SEXO@DESA%TYPE;
		V_FECNAC 			ACSMIGRA.CLIENTE_MIG.FECNAC@DESA%TYPE;
		V_EDOCIVIL 			ACSMIGRA.CLIENTE_MIG.EDOCIVIL@DESA%TYPE;
		V_CODACT 			ACSMIGRA.CLIENTE_MIG.CODACT@DESA%TYPE;
		V_CODFUERZA 		ACSMIGRA.CLIENTE_MIG.CODFUERZA@DESA%TYPE;
		V_CODGRADO 			ACSMIGRA.CLIENTE_MIG.CODGRADO@DESA%TYPE;
		V_FECVINC 			ACSMIGRA.CLIENTE_MIG.FECVINC@DESA%TYPE;
		V_FECLISTANEGRA 	ACSMIGRA.CLIENTE_MIG.FECLISTANEGRA@DESA%TYPE;
		V_CODLISTANEGRA 	ACSMIGRA.CLIENTE_MIG.CODLISTANEGRA@DESA%TYPE;
		V_MTOINGANUAL 		ACSMIGRA.CLIENTE_MIG.MTOINGANUAL@DESA%TYPE;
		V_FECINGANUAL 		ACSMIGRA.CLIENTE_MIG.FECINGANUAL@DESA%TYPE;
		V_TIPOCONYUGE 		ACSMIGRA.CLIENTE_MIG.TIPOCONYUGE@DESA%TYPE;
		V_NUMIDCONYUGE 		ACSMIGRA.CLIENTE_MIG.NUMIDCONYUGE@DESA%TYPE;
		V_NOMCONYUGE 		ACSMIGRA.CLIENTE_MIG.NOMCONYUGE@DESA%TYPE;
		V_APECONYUGE 		ACSMIGRA.CLIENTE_MIG.APECONYUGE@DESA%TYPE;
		V_INDCONTRAGARANTE 	ACSMIGRA.CLIENTE_MIG.INDCONTRAGARANTE@DESA%TYPE;
		V_CODINGANUAL 		ACSMIGRA.CLIENTE_MIG.CODINGANUAL@DESA%TYPE;
		V_NUMEXP 			ACSMIGRA.CLIENTE_MIG.NUMEXP@DESA%TYPE;
		--
		CURSOR CUR_GENERAL_MENORES
		IS
		SELECT 
			TIPOID,NUMID,DVID,MAX (NOMTER) NOMTER,MAX (APETER) APETER,MAX (CODPAIS) CODPAIS,MAX (CODESTADO) CODESTADO,
			MAX (CODCIUDAD) CODCIUDAD,MAX (CODMUNICIPIO) CODMUNICIPIO,MAX (DIREC) DIREC,MAX (TELEF1) TELEF1,MAX (TELEF2) TELEF2,
			MAX (TELEF3) TELEF3,MAX (FAX) FAX,MAX (TELEX) TELEX,MAX (ZIP) ZIP,MAX (INDNACIONAL) INDNACIONAL,MAX (STSTER) STSTER,
			MAX (FECSTS) FECSTS,MAX (NUMCTAAUXI) NUMCTAAUXI,MAX (EMAIL) EMAIL,MAX (TIPOTER) TIPOTER,MAX (RIF) RIF,MAX (NIT) NIT,
			MAX (CODPARROQUIA) CODPARROQUIA,MAX (CODSECTOR) CODSECTOR,MAX (WEBSITE) WEBSITE,MAX (RAZONSOCIAL) RAZONSOCIAL,
			MAX (INDMIGRA) INDMIGRA,MAX (MIGRA) MIGRA,CODCLI CODCLI,MAX (CLASECLI) CLASECLI,MAX (TIPOCLI) TIPOCLI,MAX (SEXO) SEXO,
			MAX (FECNAC) FECNAC,MAX (EDOCIVIL) EDOCIVIL,MAX (CODACT) CODACT,MAX (CODFUERZA) CODFUERZA,MAX (CODGRADO) CODGRADO,
			MAX (FECVINC) FECVINC,MAX (FECLISTANEGRA) FECLISTANEGRA,MAX (CODLISTANEGRA) CODLISTANEGRA,MAX (MTOINGANUAL) MTOINGANUAL,
			MAX (FECINGANUAL) FECINGANUAL,MAX (TIPOCONYUGE) TIPOCONYUGE,MAX (NUMIDCONYUGE) NUMIDCONYUGE,MAX (NOMCONYUGE) NOMCONYUGE,
			MAX (APECONYUGE) APECONYUGE,MAX (INDCONTRAGARANTE) INDCONTRAGARANTE,MAX (CODINGANUAL) CODINGANUAL,MAX (NUMEXP) NUMEXP,
			MAX (NOMBRETABLA) NOMBRETABLA,MAX (ANONAC) ANONAC,MAX (COFAAM) COFAAM
		FROM (
			SELECT
				TIPOID TIPOID,NUMID NUMID,DVID DVID,NOMBEN NOMTER,NULL APETER,NULL CODPAIS,ZONCOB CODESTADO,NULL CODCIUDAD,NULL CODMUNICIPIO,
				DIRRG1 DIREC,TO_CHAR (TELEF) TELEF1,NULL TELEF2,NULL TELEF3,NULL FAX,NULL TELEX,NULL ZIP,	INDNACIONAL INDNACIONAL,
				NULL STSTER,NULL FECSTS,NULL NUMCTAAUXI,NULL EMAIL,NULL TIPOTER,NULL RIF,NULL NIT,NULL CODPARROQUIA,NULL CODSECTOR,
				NULL WEBSITE,NULL RAZONSOCIAL,NULL INDMIGRA,NULL MIGRA,CODCLI CODCLI,NULL CLASECLI,NULL TIPOCLI,
				PM.BUSCA_SEXO_PARENTESCO (CODPAR,'I') SEXO,PM.VALIDA_CONVIERTE_FECHA (DIANAC,MESNAC,ANONAC) FECNAC,NULL EDOCIVIL,NULL CODACT,
				NULL CODFUERZA,NULL CODGRADO,NULL FECVINC,NULL FECLISTANEGRA,NULL CODLISTANEGRA,NULL MTOINGANUAL,NULL FECINGANUAL,NULL TIPOCONYUGE,
				NULL NUMIDCONYUGE,NULL NOMCONYUGE,NULL APECONYUGE,NULL INDCONTRAGARANTE,NULL CODINGANUAL,NULL NUMEXP,'EQ_HJPF71' NOMBRETABLA,
				ANONAC,COFAAM
			FROM EQ_HJPF71
			UNION ALL
			SELECT
				TIPOID TIPOID,NUMID NUMID,DVID DVID,COLASE NOMTER,NULL APETER,NULL CODPAIS,NULL CODESTADO,NULL CODCIUDAD,NULL CODMUNICIPIO,
				DIRRG1 DIREC,TO_CHAR (TELEF) TELEF1,NULL TELEF2,NULL TELEF3,NULL FAX,NULL TELEX,NULL ZIP,INDNACIONAL INDNACIONAL,NULL STSTER,
				NULL FECSTS,NULL NUMCTAAUXI,NULL EMAIL,NULL TIPOTER,NULL RIF,NULL NIT,NULL CODPARROQUIA,NULL CODSECTOR,NULL WEBSITE,
				NULL RAZONSOCIAL,NULL INDMIGRA,NULL MIGRA,CODCLI CODCLI,NULL CLASECLI,NULL TIPOCLI,
				(CASE SEXBEN
					WHEN 'M' THEN 'M'
					WHEN 'F' THEN 'F'
					ELSE 'M'
				END) SEXO,
				PM.VALIDA_CONVIERTE_FECHA (DIANAC,MESNAC,ANONAC) FECNAC,NULL EDOCIVIL,NULL CODACT,NULL CODFUERZA,NULL CODGRADO,NULL FECVINC,
				NULL FECLISTANEGRA,NULL CODLISTANEGRA,NULL MTOINGANUAL,NULL FECINGANUAL,NULL TIPOCONYUGE,NULL NUMIDCONYUGE,NULL NOMCONYUGE,
				NULL APECONYUGE,NULL INDCONTRAGARANTE,NULL CODINGANUAL,NULL NUMEXP,'EQ_CLPF05_FAM' NOMBRETABLA,0,0
			FROM EQ_CLPF05_FAM
		) AA
		WHERE NOT EXISTS (
			SELECT * FROM TERCERO_MIG_PRUEBA B
			WHERE  B.TIPOID = AA.TIPOID
			AND B.NUMID = AA.NUMID
			AND B.DVID = AA.DVID
		)
		GROUP BY TIPOID,NUMID,DVID,CODCLI;
		--
		CURSOR CUR_TERCERO_MIG (
			P_TIPOID 	ACSMIGRA.TERCERO_MIG.TIPOID@DESA%TYPE,
			P_NUMID 	ACSMIGRA.TERCERO_MIG.NUMID@DESA%TYPE,
			P_DVID 		ACSMIGRA.TERCERO_MIG.DVID@DESA%TYPE
		)
		IS
		SELECT * FROM TERCERO_MIG_PRUEBA
		WHERE TIPOID = P_TIPOID
		AND NUMID = P_NUMID
		AND DVID = P_DVID;
		--
		RT_CUR_TERCERO_MIG 	CUR_TERCERO_MIG%ROWTYPE;
		--
		CURSOR CUR_CLIENTE_MIG (
			P_TIPOID	ACSMIGRA.CLIENTE_MIG.TIPOID@DESA%TYPE,
			P_NUMID 	ACSMIGRA.CLIENTE_MIG.NUMID@DESA%TYPE,
			P_DVID 		ACSMIGRA.CLIENTE_MIG.DVID@DESA%TYPE,
			P_CODCLI 	ACSMIGRA.CLIENTE_MIG.CODCLI@DESA%TYPE
		)
		IS
		SELECT * FROM CLIENTE_MIG_PRUEBA
		WHERE TIPOID = P_TIPOID
		AND NUMID = P_NUMID
		AND DVID = P_DVID
		AND CODCLI = P_CODCLI;
		--
		RT_CUR_CLIENTE_MIG	CUR_CLIENTE_MIG%ROWTYPE;
		--
		CURSOR CUR_TERCERO_ROL_MIG (
			P_TIPOID	ACSMIGRA.TERCERO_ROL_MIG.TIPOID@DESA%TYPE,
			P_NUMID 	ACSMIGRA.TERCERO_ROL_MIG.NUMID@DESA%TYPE,
			P_DVID		ACSMIGRA.TERCERO_ROL_MIG.DVID@DESA%TYPE,
			P_TIPOTER	ACSMIGRA.TERCERO_ROL_MIG.TIPOTER@DESA%TYPE
		)
		IS
		SELECT * FROM TERCERO_ROL_MIG_PRUEBA
		WHERE TIPOID = P_TIPOID
		AND NUMID = P_NUMID
		AND DVID = P_DVID
		AND TIPOTER = P_TIPOTER;
		--
		RT_CUR_TERCERO_ROL_MIG	CUR_TERCERO_ROL_MIG%ROWTYPE;
		--
		ITIPOERROR 	ERR_MIG_CLIENTE.TIPOERROR%TYPE;
		ICODERROR 	ERR_MIG_CLIENTE.CODERROR%TYPE;
		INOMPROCESO ERR_MIG_CLIENTE.NOMPROCESO%TYPE;
		INOMTABLA 	ERR_MIG_CLIENTE.NOMTABLA%TYPE;
		IERROR 		ERR_MIG_CLIENTE.ORAERROR%TYPE;
		IDISPONIBLE BOOLEAN;
	BEGIN
		FOR I IN CUR_GENERAL_MENORES
		LOOP
			V_TIPOID := NULL;
			V_NUMID := NULL;
			V_DVID := NULL;
			V_NOMTER := NULL;
			V_APETER := NULL;
			V_CODPAIS := NULL;
			V_CODESTADO := NULL;
			V_CODCIUDAD := NULL;
			V_CODMUNICIPIO := NULL;
			V_DIREC := NULL;
			V_TELEF1 := NULL;
			V_TELEF2 := NULL;
			V_TELEF3 := NULL;
			V_FAX := NULL;
			V_TELEX := NULL;
			V_ZIP := NULL;
			V_INDNACIONAL := NULL;
			V_STSTER := NULL;
			V_FECSTS := NULL;
			V_NUMCTAAUXI := NULL;
			V_EMAIL := NULL;
			V_TIPOTER := NULL;
			V_RIF := NULL;
			V_NIT := NULL;
			V_CODPARROQUIA := NULL;
			V_CODSECTOR := NULL;
			V_WEBSITE := NULL;
			V_RAZONSOCIAL := NULL;
			V_INDMIGRA := NULL;
			V_MIGRA := NULL;
			--
			V_CODCLI := NULL;
			V_CLASECLI := NULL;
			V_TIPOCLI := NULL;
			V_SEXO := NULL;
			V_FECNAC := NULL;
			V_EDOCIVIL := NULL;
			V_CODACT := NULL;
			V_CODFUERZA := NULL;
			V_CODGRADO := NULL;
			V_FECVINC := NULL;
			V_FECLISTANEGRA := NULL;
			V_CODLISTANEGRA := NULL;
			V_MTOINGANUAL := NULL;
			V_FECINGANUAL := NULL;
			V_TIPOCONYUGE := NULL;
			V_NUMIDCONYUGE := NULL;
			V_NOMCONYUGE := NULL;
			V_APECONYUGE := NULL;
			V_INDCONTRAGARANTE := NULL;
			V_CODINGANUAL := NULL;
			V_NUMEXP := NULL;
			--
			iNomTabla := I.NOMBRETABLA;
			--
			IF iNomTabla = 'EQ_HJPF71' THEN
				V_CODESTADO := PM.BUSQUEDA_localidad (I.CODESTADO,'E');
				V_CODCIUDAD := PM.BUSQUEDA_localidad (I.CODESTADO,'C');
				V_CODMUNICIPIO := PM.BUSQUEDA_localidad (I.CODESTADO,'M');
				V_CODPARROQUIA := PM.BUSQUEDA_LOCALIDAD (I.CODESTADO,'A');
				V_CODSECTOR := PM.BUSQUEDA_LOCALIDAD (I.CODESTADO,'S');
			ELSE
				V_CODESTADO := '999';
				V_CODCIUDAD := '999';
				V_CODMUNICIPIO := '999';
				V_CODPARROQUIA := '999';
				V_CODSECTOR := '999';
			END IF;
			--
			V_TIPOID := I.TIPOID;
			V_NUMID := I.NUMID;
			V_DVID := I.DVID;
			V_NOMTER := I.NOMTER;
			V_APETER := I.APETER;
			V_CODPAIS := '001';
			V_DIREC := I.DIREC;
			V_TELEF1 := I.TELEF1;
			V_TELEF2 := I.TELEF2;
			V_TELEF3 := I.TELEF3;
			V_FAX := I.FAX;
			V_TELEX := I.TELEX;
			V_ZIP := I.ZIP;
			V_INDNACIONAL := I.INDNACIONAL;
			V_STSTER := 'INA';
			V_FECSTS := '01/01/2000';
			V_NUMCTAAUXI := I.NUMCTAAUXI;
			V_EMAIL := I.EMAIL;
			V_TIPOTER := 'CI';
			V_RIF := I.RIF;
			V_NIT := I.NIT;
			V_WEBSITE := I.WEBSITE;
			V_RAZONSOCIAL := (
				CASE
					WHEN V_TIPOID = 'J' THEN TRIM (V_NOMTER)
					ELSE NULL
				END
			);
			V_INDMIGRA := I.INDMIGRA;
			V_MIGRA := I.MIGRA;
			--
			V_CODCLI := I.CODCLI;
			V_CLASECLI := '006';
			V_TIPOCLI := (
				CASE V_TIPOID
					WHEN 'J' THEN 'E'
					WHEN 'G' THEN 'G'
					WHEN 'V' THEN 'P'
					WHEN 'E' THEN 'P'
					ELSE NULL
				END
			);
			V_SEXO := I.SEXO;
			V_FECNAC := I.FECNAC;
			V_EDOCIVIL := '9';
			V_CODACT := '9999';
			V_CODFUERZA := I.CODFUERZA;
			V_CODGRADO := I.CODGRADO;
			V_FECVINC := '01/01/2000';
			V_FECLISTANEGRA := I.FECLISTANEGRA;
			V_CODLISTANEGRA := I.CODLISTANEGRA;
			V_MTOINGANUAL := I.MTOINGANUAL;
			V_FECINGANUAL := '01/01/2000';
			V_TIPOCONYUGE := I.TIPOCONYUGE;
			V_NUMIDCONYUGE := I.NUMIDCONYUGE;
			V_NOMCONYUGE := I.NOMCONYUGE;
			V_APECONYUGE := I.APECONYUGE;
			V_INDCONTRAGARANTE := I.INDCONTRAGARANTE;
			V_CODINGANUAL := I.CODINGANUAL;
			V_NUMEXP := I.NUMEXP;
			--
			IF V_TIPOID IN ('J','G') THEN
				V_SEXO := 'N';
			END IF;
			--
			V_NOMTER := TRIM (PM.ELIMINA_ESPACIOS (UPPER(V_NOMTER)));
			V_DIREC := PM.ELIMINA_ESPACIOS (UPPER(
				(CASE
					WHEN TRIM (V_DIREC) IS NULL THEN 'SIN DIRECCION'
					ELSE V_DIREC
				END)
			));

			V_RAZONSOCIAL := PM.ELIMINA_ESPACIOS (UPPER((CASE WHEN V_TIPOID = 'J' THEN V_NOMTER END)));
			IDISPONIBLE := TRUE;
			iTipoError := 'ERR-TERCEROS';
			iNomProceso := 'PROCESO GENERAL DE TERCEROS MENORES';
			--
			IF V_NOMTER IS NULL THEN
				IDISPONIBLE := FALSE;
				iCodError := '001';
				--
				SELECT DESCRIPCION INTO iError
				FROM ERRORES
				WHERE TIPOERROR = iTipoError
				AND CODERROR = iCodError;
				--
				PM.GENERA_ERROR_CLIENTE (
					NTIPOERROR => iTipoError,
					NCODERROR => iCodError,
					NNOMPROCESO => iNomProceso,
					NNOMTABLA => iNomTabla,
					NTIPOID => V_TIPOID,
					NNUMID => V_NUMID,
					NDVID => V_DVID,
					NCODCLI => V_CODCLI,
					NERROR => iError
				);
			END IF;
			--
			IF TRIM (V_TIPOID) IS NULL THEN
				IDISPONIBLE := FALSE;
				iCodError := '003';
				--
				SELECT DESCRIPCION INTO iError
				FROM ERRORES
				WHERE TIPOERROR = iTipoError
				AND CODERROR = iCodError;
				--
				PM.GENERA_ERROR_CLIENTE (
					NTIPOERROR => iTipoError,
					NCODERROR => iCodError,
					NNOMPROCESO => iNomProceso,
					NNOMTABLA => iNomTabla,
					NTIPOID => V_TIPOID,
					NNUMID => V_NUMID,
					NDVID => V_DVID,
					NCODCLI => V_CODCLI,
					NERROR => iError
				);
			END IF;
			--
			IF  iNomTabla = 'EQ_HJPF71' AND  I.ANONAC < 0 AND I.COFAAM < 0 AND (I.COFAAM > 99 OR I.COFAAM < 99) THEN
				IDISPONIBLE := FALSE;
				iCodError := '004';
				--
				SELECT DESCRIPCION INTO iError
				FROM ERRORES
				WHERE TIPOERROR = iTipoError
				AND CODERROR = iCodError;
				--
				PM.GENERA_ERROR_CLIENTE (
					NTIPOERROR => iTipoError,
					NCODERROR => iCodError,
					NNOMPROCESO => iNomProceso,
					NNOMTABLA => iNomTabla,
					NTIPOID => V_TIPOID,
					NNUMID => V_NUMID,
					NDVID => V_DVID,
					NCODCLI => V_CODCLI,
					NERROR => iError
				);
			END IF;
			--
			IF IDISPONIBLE = TRUE THEN
				OPEN CUR_TERCERO_MIG (V_TIPOID,V_NUMID,V_DVID);
				FETCH CUR_TERCERO_MIG INTO RT_CUR_TERCERO_MIG;

				IF CUR_TERCERO_MIG%NOTFOUND THEN
					BEGIN
						INSERT INTO TERCERO_MIG_PRUEBA (
							TIPOID,NUMID,DVID,NOMTER,APETER,CODPAIS,CODESTADO,CODCIUDAD,CODMUNICIPIO,DIREC,TELEF1,TELEF2,TELEF3,
							FAX,TELEX,ZIP,INDNACIONAL,STSTER,FECSTS,NUMCTAAUXI,EMAIL,TIPOTER,RIF,NIT,CODPARROQUIA,CODSECTOR,
							WEBSITE,RAZONSOCIAL,INDMIGRA,MIGRA
						)
						VALUES (
							v_TIPOID,v_NUMID,v_DVID,v_NOMTER,v_APETER,v_CODPAIS,v_CODESTADO,v_CODCIUDAD,v_CODMUNICIPIO,v_DIREC,
							v_TELEF1,v_TELEF2,v_TELEF3,v_FAX,v_TELEX,v_ZIP,v_INDNACIONAL,v_STSTER,v_FECSTS,v_NUMCTAAUXI,v_EMAIL,
							v_TIPOTER,v_RIF,v_NIT,v_CODPARROQUIA,v_CODSECTOR,v_WEBSITE,v_RAZONSOCIAL,v_INDMIGRA,v_MIGRA
						);
					EXCEPTION WHEN OTHERS THEN
						iCodError := '002';
						iError := SQLERRM;
						PM.GENERA_ERROR_CLIENTE (
							NTIPOERROR => iTipoError,
							NCODERROR => iCodError,
							NNOMPROCESO => iNomProceso,
							NNOMTABLA => iNomTabla,
							NTIPOID => V_TIPOID,
							NNUMID => V_NUMID,
							NDVID => V_DVID,
							NCODCLI => V_CODCLI,
							NERROR => iError
						);
					END;
				END IF;
				CLOSE CUR_TERCERO_MIG;
				--
				OPEN CUR_CLIENTE_MIG (V_TIPOID,V_NUMID,V_DVID,V_CODCLI);
				FETCH CUR_CLIENTE_MIG INTO RT_CUR_CLIENTE_MIG;

				IF CUR_CLIENTE_MIG%NOTFOUND THEN
					BEGIN
						INSERT INTO CLIENTE_MIG_PRUEBA (
							TIPOID,NUMID,DVID,CODCLI,CLASECLI,TIPOCLI,SEXO,FECNAC,EDOCIVIL,CODACT,CODFUERZA,CODGRADO,
							FECVINC,FECLISTANEGRA,CODLISTANEGRA,MTOINGANUAL,FECINGANUAL,NUMCTAAUXI,TIPOCONYUGE,NUMIDCONYUGE,
							NOMCONYUGE,APECONYUGE,INDCONTRAGARANTE,CODINGANUAL,NUMEXP,INDMIGRA
						)
						VALUES (
							V_TIPOID,V_NUMID,V_DVID,V_CODCLI,V_CLASECLI,V_TIPOCLI,V_SEXO,V_FECNAC,V_EDOCIVIL,V_CODACT,V_CODFUERZA,
							V_CODGRADO,V_FECVINC,V_FECLISTANEGRA,V_CODLISTANEGRA,V_MTOINGANUAL,V_FECINGANUAL,V_NUMCTAAUXI,
							V_TIPOCONYUGE,V_NUMIDCONYUGE,V_NOMCONYUGE,V_APECONYUGE,V_INDCONTRAGARANTE,V_CODINGANUAL,V_NUMEXP,V_INDMIGRA
						);
						COMMIT;
					EXCEPTION WHEN OTHERS THEN
						iCodError := '002';
						iError := SQLERRM;
						--
						PM.GENERA_ERROR_CLIENTE (
							NTIPOERROR => iTipoError,
							NCODERROR => iCodError,
							NNOMPROCESO => iNomProceso,
							NNOMTABLA => iNomTabla,
							NTIPOID => V_TIPOID,
							NNUMID => V_NUMID,
							NDVID => V_DVID,
							NCODCLI => V_CODCLI,
							NERROR => iError
						);
					END;
					--
					OPEN CUR_TERCERO_ROL_MIG (V_TIPOID,V_NUMID,V_DVID,V_TIPOTER);
					FETCH CUR_TERCERO_ROL_MIG INTO RT_CUR_TERCERO_ROL_MIG;

					IF CUR_TERCERO_ROL_MIG%NOTFOUND THEN
						BEGIN
							INSERT INTO TERCERO_ROL_MIG_PRUEBA (TIPOID,NUMID,DVID,TIPOTER,STSROL,FECSTS)
							VALUES (V_TIPOID,V_NUMID,V_DVID,V_TIPOTER,V_STSTER,V_FECSTS);
							COMMIT;
						EXCEPTION WHEN OTHERS THEN
							iCodError := '002';
							iError := SQLERRM;
							PM.GENERA_ERROR_CLIENTE (
								NTIPOERROR => iTipoError,
								NCODERROR => iCodError,
								NNOMPROCESO => iNomProceso,
								NNOMTABLA => iNomTabla,
								NTIPOID => V_TIPOID,
								NNUMID => V_NUMID,
								NDVID => V_DVID,
								NCODCLI => V_CODCLI,
								NERROR => iError
							);
						END;
					END IF;
					CLOSE CUR_TERCERO_ROL_MIG;
				END IF;
				ROLLBACK;
				CLOSE CUR_CLIENTE_MIG;
			END IF;
		END LOOP;
	END MIGRACION_GENERAL_TERCEROS_M;
	--
END MIG_TERCERO_EG;